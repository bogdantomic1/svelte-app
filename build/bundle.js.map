{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte-routing/src/contexts.js","../../node_modules/svelte-routing/src/utils.js","../../node_modules/svelte-routing/src/Link.svelte","../../node_modules/svelte-routing/src/Route.svelte","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-routing/src/history.js","../../node_modules/svelte-routing/src/Router.svelte","../../src/store.js","../../src/Steps/Step1.svelte","../../src/Steps/Step2.svelte","../../src/Steps/Step3.svelte","../../src/Steps/Step4.svelte","../../src/AccidentSteps/Step1.svelte","../../src/AccidentSteps/Step2.svelte","../../src/AccidentSteps/Step3.svelte","../../src/AccidentSteps/Step4.svelte","../../src/FakeForm.svelte","../../src/FakeFormAccident.svelte","../../src/FakeFormTravel.svelte","../../src/FakeFormTravelComplete.svelte","../../src/Steps.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root.host) {\n        return root;\n    }\n    return document;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => svg ? svg_element(name) : element(name));\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.42.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { getContext } from \"svelte\";\n\nexport const LOCATION = {};\nexport const ROUTER = {};\nexport const HISTORY = {};\n\nexport const useLocation = () => getContext(LOCATION);\nexport const useRouter = () => getContext(ROUTER);\nexport const useHistory = () => getContext(HISTORY);\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nconst PARAM = /^:(.+)/;\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Split up the URI into segments delimited by `/`\n * Strip starting/ending `/`\n * @param {string} uri\n * @return {string[]}\n */\nconst segmentize = (uri) => uri.replace(/(^\\/+|\\/+$)/g, \"\").split(\"/\");\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} string\n * @return {string}\n */\nconst stripSlashes = (string) => string.replace(/(^\\/+|\\/+$)/g, \"\");\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nconst rankRoute = (route, index) => {\n    const score = route.default\n        ? 0\n        : segmentize(route.path).reduce((score, segment) => {\n              score += SEGMENT_POINTS;\n\n              if (segment === \"\") {\n                  score += ROOT_POINTS;\n              } else if (PARAM.test(segment)) {\n                  score += DYNAMIC_POINTS;\n              } else if (segment[0] === \"*\") {\n                  score -= SEGMENT_POINTS + SPLAT_PENALTY;\n              } else {\n                  score += STATIC_POINTS;\n              }\n\n              return score;\n          }, 0);\n\n    return { route, score, index };\n};\n/**\n * Give a score to all routes and sort them on that\n * If two routes have the exact same score, we go by index instead\n * @param {object[]} routes\n * @return {object[]}\n */\nconst rankRoutes = (routes) =>\n    routes\n        .map(rankRoute)\n        .sort((a, b) =>\n            a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index\n        );\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { path, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nconst pick = (routes, uri) => {\n    let match;\n    let default_;\n\n    const [uriPathname] = uri.split(\"?\");\n    const uriSegments = segmentize(uriPathname);\n    const isRootUri = uriSegments[0] === \"\";\n    const ranked = rankRoutes(routes);\n\n    for (let i = 0, l = ranked.length; i < l; i++) {\n        const route = ranked[i].route;\n        let missed = false;\n\n        if (route.default) {\n            default_ = {\n                route,\n                params: {},\n                uri,\n            };\n            continue;\n        }\n\n        const routeSegments = segmentize(route.path);\n        const params = {};\n        const max = Math.max(uriSegments.length, routeSegments.length);\n        let index = 0;\n\n        for (; index < max; index++) {\n            const routeSegment = routeSegments[index];\n            const uriSegment = uriSegments[index];\n\n            if (routeSegment && routeSegment[0] === \"*\") {\n                // Hit a splat, just grab the rest, and return a match\n                // uri:   /files/documents/work\n                // route: /files/* or /files/*splatname\n                const splatName =\n                    routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n                params[splatName] = uriSegments\n                    .slice(index)\n                    .map(decodeURIComponent)\n                    .join(\"/\");\n                break;\n            }\n\n            if (typeof uriSegment === \"undefined\") {\n                // URI is shorter than the route, no match\n                // uri:   /users\n                // route: /users/:userId\n                missed = true;\n                break;\n            }\n\n            const dynamicMatch = PARAM.exec(routeSegment);\n\n            if (dynamicMatch && !isRootUri) {\n                const value = decodeURIComponent(uriSegment);\n                params[dynamicMatch[1]] = value;\n            } else if (routeSegment !== uriSegment) {\n                // Current segments don't match, not dynamic, not splat, so no match\n                // uri:   /users/123/settings\n                // route: /users/:id/profile\n                missed = true;\n                break;\n            }\n        }\n\n        if (!missed) {\n            match = {\n                route,\n                params,\n                uri: \"/\" + uriSegments.slice(0, index).join(\"/\"),\n            };\n            break;\n        }\n    }\n\n    return match || default_ || null;\n};\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nconst addQuery = (pathname, query) => pathname + (query ? `?${query}` : \"\");\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nconst resolve = (to, base) => {\n    // /foo/bar, /baz/qux => /foo/bar\n    if (to.startsWith(\"/\")) return to;\n\n    const [toPathname, toQuery] = to.split(\"?\");\n    const [basePathname] = base.split(\"?\");\n    const toSegments = segmentize(toPathname);\n    const baseSegments = segmentize(basePathname);\n\n    // ?a=b, /users?b=c => /users?a=b\n    if (toSegments[0] === \"\") return addQuery(basePathname, toQuery);\n\n    // profile, /users/789 => /users/789/profile\n\n    if (!toSegments[0].startsWith(\".\")) {\n        const pathname = baseSegments.concat(toSegments).join(\"/\");\n        return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n    }\n\n    // ./       , /users/123 => /users/123\n    // ../      , /users/123 => /users\n    // ../..    , /users/123 => /\n    // ../../one, /a/b/c/d   => /a/b/one\n    // .././one , /a/b/c/d   => /a/b/c/one\n    const allSegments = baseSegments.concat(toSegments);\n    const segments = [];\n\n    allSegments.forEach((segment) => {\n        if (segment === \"..\") segments.pop();\n        else if (segment !== \".\") segments.push(segment);\n    });\n\n    return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n};\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nconst combinePaths = (basepath, path) =>\n    `${stripSlashes(\n        path === \"/\"\n            ? basepath\n            : `${stripSlashes(basepath)}/${stripSlashes(path)}`\n    )}/`;\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nconst shouldNavigate = (event) =>\n    !event.defaultPrevented &&\n    event.button === 0 &&\n    !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n\n// svelte seems to kill anchor.host value in ie11, so fall back to checking href\nconst hostMatches = (anchor) => {\n    const host = location.host;\n    return (\n        anchor.host === host ||\n        anchor.href.indexOf(`https://${host}`) === 0 ||\n        anchor.href.indexOf(`http://${host}`) === 0\n    );\n};\n\nconst canUseDOM = () =>\n    typeof window !== \"undefined\" &&\n    \"document\" in window &&\n    \"location\" in window;\n\nexport {\n    stripSlashes,\n    pick,\n    resolve,\n    combinePaths,\n    shouldNavigate,\n    hostMatches,\n    canUseDOM,\n};\n","<script>\n    import { createEventDispatcher, getContext } from \"svelte\";\n    import { HISTORY, LOCATION, ROUTER } from \"./contexts.js\";\n    import { resolve, shouldNavigate } from \"./utils.js\";\n\n    export let to = \"#\";\n    export let replace = false;\n    export let state = {};\n    export let getProps = () => ({});\n\n    const location = getContext(LOCATION);\n    const { base } = getContext(ROUTER);\n    const { navigate } = getContext(HISTORY);\n    const dispatch = createEventDispatcher();\n\n    let href, isPartiallyCurrent, isCurrent, props;\n    $: href = to === \"/\" ? $base.uri : resolve(to, $base.uri);\n    $: isPartiallyCurrent = $location.pathname.startsWith(href);\n    $: isCurrent = href === $location.pathname;\n    $: ariaCurrent = isCurrent ? \"page\" : undefined;\n    $: props = getProps({\n        location: $location,\n        href,\n        isPartiallyCurrent,\n        isCurrent,\n        existingProps: $$restProps,\n    });\n\n    const onClick = (event) => {\n        dispatch(\"click\", event);\n        if (shouldNavigate(event)) {\n            event.preventDefault();\n            // Don't push another entry to the history stack when the user\n            // clicks on a Link to the page they are currently on.\n            const shouldReplace = $location.pathname === href || replace;\n            navigate(href, { state, replace: shouldReplace });\n        }\n    };\n</script>\n\n<a\n    {href}\n    aria-current={ariaCurrent}\n    on:click={onClick}\n    {...props}\n    {...$$restProps}\n>\n    <slot active={!!ariaCurrent} />\n</a>\n","<script>\n    import { getContext, onDestroy } from \"svelte\";\n    import { ROUTER } from \"./contexts.js\";\n    import { canUseDOM } from \"./utils.js\";\n\n    export let path = \"\";\n    export let component = null;\n\n    let routeParams = {};\n    let routeProps = {};\n\n    const { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n\n    const route = {\n        path,\n        // If no path prop is given, this Route will act as the default Route\n        // that is rendered if no other Route in the Router is a match.\n        default: path === \"\",\n    };\n\n    $: if ($activeRoute && $activeRoute.route === route) {\n        routeParams = $activeRoute.params;\n\n        const { component: c, path, ...rest } = $$props;\n        routeProps = rest;\n\n        if (c) {\n            if (c.toString().startsWith(\"class \")) component = c;\n            else component = c();\n        }\n\n        canUseDOM() && window?.scrollTo(0, 0);\n    }\n\n    registerRoute(route);\n\n    onDestroy(() => {\n        unregisterRoute(route);\n    });\n</script>\n\n{#if $activeRoute && $activeRoute.route === route}\n    {#if component}\n        {#await component then resolvedComponent}\n            <svelte:component\n                this={resolvedComponent?.default || resolvedComponent}\n                {...routeParams}\n                {...routeProps}\n            />\n        {/await}\n    {:else}\n        <slot params={routeParams} />\n    {/if}\n{/if}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n * https://github.com/reach/router/blob/master/LICENSE\n */\nimport { canUseDOM } from \"./utils\";\n\nconst getLocation = (source) => {\n    return {\n        ...source.location,\n        state: source.history.state,\n        key: (source.history.state && source.history.state.key) || \"initial\",\n    };\n};\nconst createHistory = (source) => {\n    const listeners = [];\n    let location = getLocation(source);\n\n    return {\n        get location() {\n            return location;\n        },\n\n        listen(listener) {\n            listeners.push(listener);\n\n            const popstateListener = () => {\n                location = getLocation(source);\n                listener({ location, action: \"POP\" });\n            };\n\n            source.addEventListener(\"popstate\", popstateListener);\n\n            return () => {\n                source.removeEventListener(\"popstate\", popstateListener);\n                const index = listeners.indexOf(listener);\n                listeners.splice(index, 1);\n            };\n        },\n\n        navigate(to, { state, replace = false } = {}) {\n            state = { ...state, key: Date.now() + \"\" };\n            // try...catch iOS Safari limits to 100 pushState calls\n            try {\n                if (replace) source.history.replaceState(state, \"\", to);\n                else source.history.pushState(state, \"\", to);\n            } catch (e) {\n                source.location[replace ? \"replace\" : \"assign\"](to);\n            }\n            location = getLocation(source);\n            listeners.forEach((listener) =>\n                listener({ location, action: \"PUSH\" })\n            );\n            document.activeElement.blur();\n        },\n    };\n};\n// Stores history entries in memory for testing or other platforms like Native\nconst createMemorySource = (initialPathname = \"/\") => {\n    let index = 0;\n    const stack = [{ pathname: initialPathname, search: \"\" }];\n    const states = [];\n\n    return {\n        get location() {\n            return stack[index];\n        },\n        addEventListener(name, fn) {},\n        removeEventListener(name, fn) {},\n        history: {\n            get entries() {\n                return stack;\n            },\n            get index() {\n                return index;\n            },\n            get state() {\n                return states[index];\n            },\n            pushState(state, _, uri) {\n                const [pathname, search = \"\"] = uri.split(\"?\");\n                index++;\n                stack.push({ pathname, search });\n                states.push(state);\n            },\n            replaceState(state, _, uri) {\n                const [pathname, search = \"\"] = uri.split(\"?\");\n                stack[index] = { pathname, search };\n                states[index] = state;\n            },\n        },\n    };\n};\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst globalHistory = createHistory(\n    canUseDOM() ? window : createMemorySource()\n);\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","<script>\n    import { getContext, onMount, setContext } from \"svelte\";\n    import { derived, writable } from \"svelte/store\";\n    import { HISTORY, LOCATION, ROUTER } from \"./contexts.js\";\n    import { globalHistory } from \"./history.js\";\n    import { combinePaths, pick } from \"./utils.js\";\n\n    export let basepath = \"/\";\n    export let url = null;\n    export let history = globalHistory;\n\n    setContext(HISTORY, history);\n\n    const locationContext = getContext(LOCATION);\n    const routerContext = getContext(ROUTER);\n\n    const routes = writable([]);\n    const activeRoute = writable(null);\n    let hasActiveRoute = false; // Used in SSR to synchronously set that a Route is active.\n\n    // If locationContext is not set, this is the topmost Router in the tree.\n    // If the `url` prop is given we force the location to it.\n    const location =\n        locationContext || writable(url ? { pathname: url } : history.location);\n\n    // If routerContext is set, the routerBase of the parent Router\n    // will be the base for this Router's descendants.\n    // If routerContext is not set, the path and resolved uri will both\n    // have the value of the basepath prop.\n    const base = routerContext\n        ? routerContext.routerBase\n        : writable({\n              path: basepath,\n              uri: basepath,\n          });\n\n    const routerBase = derived([base, activeRoute], ([base, activeRoute]) => {\n        // If there is no activeRoute, the routerBase will be identical to the base.\n        if (!activeRoute) return base;\n\n        const { path: basepath } = base;\n        const { route, uri } = activeRoute;\n        // Remove the potential /* or /*splatname from\n        // the end of the child Routes relative paths.\n        const path = route.default ? basepath : route.path.replace(/\\*.*$/, \"\");\n        return { path, uri };\n    });\n\n    const registerRoute = (route) => {\n        const { path: basepath } = $base;\n        let { path } = route;\n\n        // We store the original path in the _path property so we can reuse\n        // it when the basepath changes. The only thing that matters is that\n        // the route reference is intact, so mutation is fine.\n        route._path = path;\n        route.path = combinePaths(basepath, path);\n\n        if (typeof window === \"undefined\") {\n            // In SSR we should set the activeRoute immediately if it is a match.\n            // If there are more Routes being registered after a match is found,\n            // we just skip them.\n            if (hasActiveRoute) return;\n\n            const matchingRoute = pick([route], $location.pathname);\n\n            if (matchingRoute) {\n                activeRoute.set(matchingRoute);\n                hasActiveRoute = true;\n            }\n        } else {\n            routes.update((rs) => [...rs, route]);\n        }\n    };\n\n    const unregisterRoute = (route) => {\n        routes.update((rs) => rs.filter((r) => r !== route));\n    };\n    // This reactive statement will update all the Routes' path when\n    // the basepath changes.\n    $: {\n        const { path: basepath } = $base;\n        routes.update((rs) =>\n            rs.map((r) => Object.assign(r, { path: combinePaths(basepath, r._path) }))\n        );\n    }\n    // This reactive statement will be run when the Router is created\n    // when there are no Routes and then again the following tick, so it\n    // will not find an active Route in SSR and in the browser it will only\n    // pick an active Route after all Routes have been registered.\n    $: {\n        const bestMatch = pick($routes, $location.pathname);\n        activeRoute.set(bestMatch);\n    }\n\n    if (!locationContext) {\n        // The topmost Router in the tree is responsible for updating\n        // the location store and supplying it through context.\n        onMount(() => {\n            const unlisten = history.listen((event) => {\n                location.set(event.location);\n            });\n\n            return unlisten;\n        });\n\n        setContext(LOCATION, location);\n    }\n\n    setContext(ROUTER, {\n        activeRoute,\n        base,\n        routerBase,\n        registerRoute,\n        unregisterRoute,\n    });\n</script>\n\n<slot route={$activeRoute && $activeRoute.uri} location={$location} />\n","import { writable } from 'svelte/store';\n\nexport const formType = writable('Travel');\nexport const currentStep = writable(1);\n\n/* TRAVEL FORM */\nexport const Numberofpeople = writable(206450000);\nexport const Startingdayofinsurance = writable(new Date());\nexport const Durationofinsurance = writable(206450002);\nexport const Durationoftrip = writable(206450000);\nexport const Riskexposure = writable(206450000);\nexport const Packet = writable(206450000);\n\nexport const Taxnumber = writable('');\nexport const City = writable('');\nexport const Street = writable('');\nexport const HouseNumber = writable('');\nexport const GenderCT = writable(1);\n\nexport const FirstName = writable('');\nexport const LastName = writable('');\nexport const DateOfbirth = writable(new Date());\nexport const Email = writable('');\nexport const PhoneNumber = writable('');\n\n/* ACCIDENT FORM */\nexport const AccidentStartingdayofinsurance = writable(new Date());\nexport const AccidentDurationofinsurance = writable(206450000);\nexport const AccidentNumberofpeople = writable(0);\nexport const AccidentPacket = writable(206450000);\nexport const AccidentPersonalInsurance = writable(206450002);\nexport const AccidentRegisteredAthlete = writable(206450000);\n\nexport const AccidentTaxnumber = writable('');\nexport const AccidentCity = writable('');\nexport const AccidentStreet = writable('');\nexport const AccidentHouseNumber = writable('');\n\nexport const AccidentFirstName = writable('');\nexport const AccidentLastName = writable('');\nexport const AccidentDateOfbirth = writable(new Date());\nexport const AccidentEmail = writable('');\nexport const AccidentGenderCT = writable(1);","<script>\n    import { currentStep, Numberofpeople, Startingdayofinsurance, Durationofinsurance, Durationoftrip, Riskexposure, Packet } from '../store.js'\n\n    let setStep = (val) => {\n        currentStep.update((n) => val);\n    }\n\n</script>\n\n<section class=\"text-gray-600 body-font\">\n  <div class=\"container px-5 mx-auto flex flex-wrap items-center\">\n    <div class=\"lg:w-3/5 md:w-1/2 md:pr-16 lg:pr-0 pr-0\">\n      <h1 class=\"title-font font-medium text-3xl text-gray-900\">Travel Step 1</h1>\n      <p class=\"leading-relaxed mt-4\">Please fill in all the information and continue to the next step</p>\n    </div>\n    <div class=\"lg:w-2/6 md:w-1/2 bg-gray-100 rounded-lg p-8 flex flex-col md:ml-auto w-full mt-10 md:mt-0\">\n      <div class=\"relative mb-4\">\n        <label for=\"Numberofpeople\" class=\"leading-7 text-sm text-gray-600\">Number of People</label>\n        <select bind:value={$Numberofpeople} id=\"Numberofpeople\" name=\"Numberofpeople\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n          <option value=\"206450000\">Individually</option>\n          <option value=\"206450001\">Family</option>\n          <option value=\"206450002\">Group</option>\n        </select>\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"Startingdayofinsurance\" class=\"leading-7 text-sm text-gray-600\">Starting day of Insurance</label>\n        <input type=\"date\" bind:value={$Startingdayofinsurance} id=\"Startingdayofinsurance\" name=\"Startingdayofinsurance\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"Durationofinsurance\" class=\"leading-7 text-sm text-gray-600\">Duration of Insurance</label>\n        <select bind:value={$Durationofinsurance} id=\"Durationofinsurance\" name=\"Durationofinsurance\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n          <option value=\"206450002\">2 days</option>\n          <option value=\"206450003\">3 days</option>\n          <option value=\"206450004\">5 days</option>\n          <option value=\"206450005\">8 days</option>\n          <option value=\"206450006\">15 days</option>\n          <option value=\"206450007\">21 days</option>\n          <option value=\"206450008\">30 days</option>\n          <option value=\"206450009\">60 days</option>\n          <option value=\"206450010\">1 year</option>\n        </select>\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"Durationoftrip\" class=\"leading-7 text-sm text-gray-600\">Duration of trip</label>\n        <select bind:value={$Durationoftrip} id=\"Durationoftrip\" name=\"Durationoftrip\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n          <option value=\"206450000\">Less than 90 days</option>\n          <option value=\"206450001\">90 or more days</option>\n        </select>\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"Riskexposure\" class=\"leading-7 text-sm text-gray-600\">Risk exposure</label>\n        <select bind:value={$Riskexposure} id=\"Riskexposure\" name=\"Riskexposure\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n          <option value=\"206450000\">Yes</option>\n          <option value=\"206450001\">No</option>\n        </select>\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"Packet\" class=\"leading-7 text-sm text-gray-600\">Package</label>\n        <select bind:value={$Packet} id=\"Packet\" name=\"Packet\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n          <option value=\"206450000\">A</option>\n          <option value=\"206450001\">B</option>\n          <option value=\"206450002\">C</option>\n        </select>\n      </div>\n      <button on:click={() => setStep(2) } class=\"text-white bg-red-500 border-0 py-2 px-8 focus:outline-none hover:bg-red-600 rounded text-lg\">Next Step</button>\n    </div>\n  </div>\n</section>","<script>\n    import { currentStep, Taxnumber, City, Street, HouseNumber, GenderCT } from '../store.js'\n\n    let setStep = (val) => {\n        currentStep.update((n) => val);\n    }\n\n</script>\n\n<section class=\"text-gray-600 body-font\">\n  <div class=\"container px-5 mx-auto flex flex-wrap items-center\">\n    <div class=\"lg:w-3/5 md:w-1/2 md:pr-16 lg:pr-0 pr-0\">\n      <h1 class=\"title-font font-medium text-3xl text-gray-900\">Travel Step 2</h1>\n      <p class=\"leading-relaxed mt-4\">Please fill in all the information and continue to the next step</p>\n    </div>\n    <div class=\"lg:w-2/6 md:w-1/2 bg-gray-100 rounded-lg p-8 flex flex-col md:ml-auto w-full mt-10 md:mt-0\">\n      <div class=\"relative mb-4\">\n        <label for=\"Taxnumber\" class=\"leading-7 text-sm text-gray-600\">Taxnumber</label>\n        <input type=\"text\" bind:value={$Taxnumber} id=\"Taxnumber\" name=\"Taxnumber\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"City\" class=\"leading-7 text-sm text-gray-600\">City</label>\n        <input type=\"text\" bind:value={$City} id=\"City\" name=\"City\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"Street\" class=\"leading-7 text-sm text-gray-600\">Street</label>\n        <input type=\"text\" bind:value={$Street} id=\"Street\" name=\"Street\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"HouseNumber\" class=\"leading-7 text-sm text-gray-600\">HouseNumber</label>\n        <input type=\"text\" bind:value={$HouseNumber} id=\"HouseNumber\" name=\"HouseNumber\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"GenderCT\" class=\"leading-7 text-sm text-gray-600\">Gender CT</label>\n        <select bind:value={$GenderCT} id=\"GenderCT\" name=\"GenderCT\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n          <option value=\"1\">Male</option>\n          <option value=\"2\">Female</option>\n          <option value=\"3\">Undefined</option>\n        </select>\n      </div>\n      <button on:click={() => setStep(3) } class=\"text-white bg-red-500 border-0 py-2 px-8 focus:outline-none hover:bg-red-600 rounded text-lg\">Next Step</button>\n    </div>\n  </div>\n</section>","<script>\n    import { currentStep, FirstName, LastName, DateOfbirth, Email, PhoneNumber } from '../store.js'\n\n    let setStep = (val) => {\n        currentStep.update((n) => val);\n    }\n\n</script>\n\n<section class=\"text-gray-600 body-font\">\n  <div class=\"container px-5 mx-auto flex flex-wrap items-center\">\n    <div class=\"lg:w-3/5 md:w-1/2 md:pr-16 lg:pr-0 pr-0\">\n      <h1 class=\"title-font font-medium text-3xl text-gray-900\">Travel Step 3</h1>\n      <p class=\"leading-relaxed mt-4\">Please fill in all the information and continue to the next step</p>\n    </div>\n    <div class=\"lg:w-2/6 md:w-1/2 bg-gray-100 rounded-lg p-8 flex flex-col md:ml-auto w-full mt-10 md:mt-0\">\n      <div class=\"relative mb-4\">\n        <label for=\"FirstName\" class=\"leading-7 text-sm text-gray-600\">First Name</label>\n        <input type=\"text\" bind:value={$FirstName} id=\"FirstName\" name=\"FirstName\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"LastName\" class=\"leading-7 text-sm text-gray-600\">Last Name</label>\n        <input type=\"text\" bind:value={$LastName} id=\"LastName\" name=\"LastName\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"DateOfbirth\" class=\"leading-7 text-sm text-gray-600\">Date Of birth</label>\n        <input type=\"date\" bind:value={$DateOfbirth} id=\"DateOfbirth\" name=\"DateOfbirth\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"Email\" class=\"leading-7 text-sm text-gray-600\">Email</label>\n        <input type=\"email\" bind:value={$Email} id=\"Email\" name=\"Email\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"PhoneNumber\" class=\"leading-7 text-sm text-gray-600\">Phone Number</label>\n        <input type=\"text\" bind:value={$PhoneNumber} id=\"PhoneNumber\" name=\"PhoneNumber\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n      </div>\n      <button on:click={() => setStep(4) } class=\"text-white bg-red-500 border-0 py-2 px-8 focus:outline-none hover:bg-red-600 rounded text-lg\">Next Step</button>\n    </div>\n  </div>\n</section>","<script>\n    import { Numberofpeople, Startingdayofinsurance, Durationofinsurance, Durationoftrip, Riskexposure, Packet, Taxnumber, City, Street, HouseNumber, GenderCT, FirstName, LastName, DateOfbirth, Email, PhoneNumber } from '../store.js'\n    import { createEventDispatcher } from 'svelte'\n    const dispatch = createEventDispatcher()\n\n    function removeListener() {\n      //dispatch('userSubmit')\n      //submit fakeForm for me, it has onsubmit event\n      let form = document.getElementById(\"fakeFormTravel\");\n\n    if (form) {\n        let event = new Event(\"submit\", { bubbles: true, cancelable: true });\n        form.dispatchEvent(event);\n        console.log(\"Submit event dispatched!\");\n    } else {\n        console.error(\"Form not found!\");\n    }\n    }\n    \n</script>\n\n  <div class=\"container px-5 py-24 mx-auto flex md:items-center lg:items-start md:flex-row md:flex-nowrap flex-wrap flex-col\">\n    <div class=\"flex-grow flex flex-wrap md:pl-20 -mb-10 md:mt-0 mt-10 md:text-left text-center\">\n      <div class=\"lg:w-1/3 md:w-1/2 w-full px-4\">\n        <h2 class=\"title-font font-medium text-gray-900 tracking-widest text-sm mb-3\">Travel Step 1</h2>\n        <nav class=\"list-none mb-10\">\n          <li>\n            <p>Number of people: {$Numberofpeople}</p>\n          </li>\n          <li>\n            <p>Starting day of insurance : {$Startingdayofinsurance}</p>\n          </li>\n          <li>\n            <p>Duration of insurance : {$Durationofinsurance}</p>\n          </li>\n          <li>\n            <p>Duration of trip : {$Durationoftrip}</p>\n          </li>\n          <li>\n            <p>Riskexposure : {$Riskexposure}</p>\n          </li>\n          <li>\n            <p>Packet : {$Packet}</p>\n          </li>\n        </nav>\n      </div>\n      <div class=\"lg:w-1/3 md:w-1/2 w-full px-4\">\n        <h2 class=\"title-font font-medium text-gray-900 tracking-widest text-sm mb-3\">Travel Step 2</h2>\n        <nav class=\"list-none mb-10\">\n          <li>\n            <p>Taxnumber: {$Taxnumber}</p>\n          </li>\n          <li>\n            <p>City : {$City}</p>\n          </li>\n          <li>\n            <p>Street : {$Street}</p>\n          </li>\n          <li>\n            <p>House Number : {$HouseNumber}</p>\n          </li>\n          <li>\n            <p>Gender CT : {$GenderCT}</p>\n          </li>\n        </nav>\n      </div>\n      <div class=\"lg:w-1/3 md:w-1/2 w-full px-4\">\n        <h2 class=\"title-font font-medium text-gray-900 tracking-widest text-sm mb-3\">Travel Step 3</h2>\n        <nav class=\"list-none mb-10\">\n          <li>\n            <p>First Name : {$FirstName}</p>\n          </li>\n          <li>\n            <p>Last Name : {$LastName}</p>\n          </li>\n          <li>\n            <p>Date Of birth : {$DateOfbirth}</p>\n          </li>\n          <li>\n            <p>Email : {$Email}</p>\n          </li>\n          <li>\n            <p>Phone Number : {$PhoneNumber}</p>\n          </li>\n        </nav>\n      </div>\n    </div>\n    <div class=\"w-64 flex-shrink-0 md:mx-0 mx-auto text-center md:text-left\">\n      <button on:click={removeListener} class=\"text-white bg-red-500 border-0 py-2 px-8 focus:outline-none hover:bg-red-600 rounded text-lg\">Submit</button>\n    </div>\n  </div>","<script>\n    import { currentStep, AccidentStartingdayofinsurance, AccidentDurationofinsurance, AccidentNumberofpeople, AccidentPacket, AccidentPersonalInsurance, AccidentRegisteredAthlete } from '../store.js'\n\n    \n    let setStep = (val) => {\n        currentStep.update((n) => val);\n    }\n\n</script>\n\n<section class=\"text-gray-600 body-font\">\n  <div class=\"container px-5 mx-auto flex flex-wrap items-center\">\n    <div class=\"lg:w-3/5 md:w-1/2 md:pr-16 lg:pr-0 pr-0\">\n      <h1 class=\"title-font font-medium text-3xl text-gray-900\">Accident Step 1</h1>\n      <p class=\"leading-relaxed mt-4\">Please fill in all the information and continue to the next step</p>\n    </div>\n    <div class=\"lg:w-2/6 md:w-1/2 bg-gray-100 rounded-lg p-8 flex flex-col md:ml-auto w-full mt-10 md:mt-0\">\n      <div class=\"relative mb-4\">\n        <label for=\"Startingdayofinsurance\" class=\"leading-7 text-sm text-gray-600\">Starting day of Insurance</label>\n        <input type=\"date\" bind:value={$AccidentStartingdayofinsurance} id=\"Startingdayofinsurance\" name=\"Startingdayofinsurance\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"AccidentDurationofinsurance\" class=\"leading-7 text-sm text-gray-600\">Duration of Insurance</label>\n        <select bind:value={$AccidentDurationofinsurance} id=\"AccidentDurationofinsurance\" name=\"AccidentDurationofinsurance\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n          <option value=\"206450000\">1 year with automatic renewal</option>\n          <option value=\"206450001\">1 year without automatic renewal</option>\n        </select>\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"AccidentNumberofpeople\" class=\"leading-7 text-sm text-gray-600\">Number of People</label>\n        <input type=\"number\" bind:value={$AccidentNumberofpeople} id=\"AccidentNumberofpeople\" name=\"AccidentNumberofpeople\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"AccidentPacket\" class=\"leading-7 text-sm text-gray-600\">Package</label>\n        <select bind:value={$AccidentPacket} id=\"AccidentPacket\" name=\"AccidentPacket\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n          <option value=\"206450000\">Small package</option>\n          <option value=\"206450001\">Big package</option>\n          <option value=\"206450002\">Comfort package</option>\n        </select>\n      </div>\n\n      <div class=\"relative mb-4\">\n        <label for=\"AccidentPersonalInsurance\" class=\"leading-7 text-sm text-gray-600\">Personal Insurance</label>\n        <select bind:value={$AccidentPersonalInsurance} id=\"AccidentPersonalInsurance\" name=\"AccidentPersonalInsurance\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n          <option value=\"206450002\">Yes</option>\n          <option value=\"206450003\">No</option>\n        </select>\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"AccidentRegisteredAthlete\" class=\"leading-7 text-sm text-gray-600\">Registered Athlete</label>\n        <select bind:value={$AccidentRegisteredAthlete} id=\"AccidentRegisteredAthlete\" name=\"AccidentRegisteredAthlete\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n          <option value=\"206450000\">Yes</option>\n          <option value=\"206450001\">No</option>\n        </select>\n      </div>\n\n      <button on:click={() => setStep(2) } class=\"text-white bg-red-500 border-0 py-2 px-8 focus:outline-none hover:bg-red-600 rounded text-lg\">Next Step</button>\n    </div>\n  </div>\n</section>","<script>\n    import { currentStep, AccidentTaxnumber, AccidentCity, AccidentStreet, AccidentHouseNumber } from '../store.js'\n\n    let setStep = (val) => {\n        currentStep.update((n) => val);\n    }\n\n</script>\n\n<section class=\"text-gray-600 body-font\">\n  <div class=\"container px-5 mx-auto flex flex-wrap items-center\">\n    <div class=\"lg:w-3/5 md:w-1/2 md:pr-16 lg:pr-0 pr-0\">\n      <h1 class=\"title-font font-medium text-3xl text-gray-900\">Accident Step 2</h1>\n      <p class=\"leading-relaxed mt-4\">Please fill in all the information and continue to the next step</p>\n    </div>\n    <div class=\"lg:w-2/6 md:w-1/2 bg-gray-100 rounded-lg p-8 flex flex-col md:ml-auto w-full mt-10 md:mt-0\">\n      <div class=\"relative mb-4\">\n        <label for=\"AccidentTaxnumber\" class=\"leading-7 text-sm text-gray-600\">Taxnumber</label>\n        <input type=\"text\" bind:value={$AccidentTaxnumber} id=\"AccidentTaxnumber\" name=\"AccidentTaxnumber\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"AccidentCity\" class=\"leading-7 text-sm text-gray-600\">City</label>\n        <input type=\"text\" bind:value={$AccidentCity} id=\"AccidentCity\" name=\"AccidentCity\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"AccidentStreet\" class=\"leading-7 text-sm text-gray-600\">Street</label>\n        <input type=\"text\" bind:value={$AccidentStreet} id=\"AccidentStreet\" name=\"AccidentStreet\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"AccidentHouseNumber\" class=\"leading-7 text-sm text-gray-600\">HouseNumber</label>\n        <input type=\"text\" bind:value={$AccidentHouseNumber} id=\"AccidentHouseNumber\" name=\"AccidentHouseNumber\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n      </div>\n      <button on:click={() => setStep(3) } class=\"text-white bg-red-500 border-0 py-2 px-8 focus:outline-none hover:bg-red-600 rounded text-lg\">Next Step</button>\n    </div>\n  </div>\n</section>","<script>\n    import {  currentStep, AccidentFirstName, AccidentLastName, AccidentDateOfbirth, AccidentEmail, AccidentGenderCT } from '../store.js'\n\n    let setStep = (val) => {\n        currentStep.update((n) => val);\n    }\n\n</script>\n\n<section class=\"text-gray-600 body-font\">\n  <div class=\"container px-5 mx-auto flex flex-wrap items-center\">\n    <div class=\"lg:w-3/5 md:w-1/2 md:pr-16 lg:pr-0 pr-0\">\n      <h1 class=\"title-font font-medium text-3xl text-gray-900\">Accident Step 3</h1>\n      <p class=\"leading-relaxed mt-4\">Please fill in all the information and continue to the next step</p>\n    </div>\n    <div class=\"lg:w-2/6 md:w-1/2 bg-gray-100 rounded-lg p-8 flex flex-col md:ml-auto w-full mt-10 md:mt-0\">\n      <div class=\"relative mb-4\">\n        <label for=\"AccidentFirstName\" class=\"leading-7 text-sm text-gray-600\">First Name</label>\n        <input type=\"text\" bind:value={$AccidentFirstName} id=\"AccidentFirstName\" name=\"AccidentFirstName\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"AccidentLastName\" class=\"leading-7 text-sm text-gray-600\">Last Name</label>\n        <input type=\"text\" bind:value={$AccidentLastName} id=\"AccidentLastName\" name=\"AccidentLastName\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"AccidentDateOfbirth\" class=\"leading-7 text-sm text-gray-600\">Date Of birth</label>\n        <input type=\"date\" bind:value={$AccidentDateOfbirth} id=\"AccidentDateOfbirth\" name=\"AccidentDateOfbirth\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"AccidentEmail\" class=\"leading-7 text-sm text-gray-600\">Email</label>\n        <input type=\"email\" bind:value={$AccidentEmail} id=\"AccidentEmail\" name=\"AccidentEmail\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n      </div>\n      <div class=\"relative mb-4\">\n        <label for=\"AccidentGenderCT\" class=\"leading-7 text-sm text-gray-600\">Gender CT</label>\n        <select bind:value={$AccidentGenderCT} id=\"AccidentGenderCT\" name=\"AccidentGenderCT\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n          <option value=\"1\">Male</option>\n          <option value=\"2\">Female</option>\n          <option value=\"3\">Undefined</option>\n        </select>\n      </div>\n      <button on:click={() => setStep(4) } class=\"text-white bg-red-500 border-0 py-2 px-8 focus:outline-none hover:bg-red-600 rounded text-lg\">Next Step</button>\n    </div>\n  </div>\n</section>","<script>\n    import { AccidentStartingdayofinsurance, AccidentDurationofinsurance, AccidentNumberofpeople, AccidentPacket, AccidentPersonalInsurance, AccidentRegisteredAthlete, AccidentTaxnumber, AccidentCity, AccidentStreet, AccidentHouseNumber, AccidentFirstName, AccidentLastName, AccidentDateOfbirth, AccidentEmail, AccidentGenderCT } from '../store.js'\n    import { createEventDispatcher } from 'svelte'\n    const dispatch = createEventDispatcher()\n\n    function removeListener() {\n      dispatch('userSubmit')\n    }\n    \n</script>\n\n  <div class=\"container px-5 py-24 mx-auto flex md:items-center lg:items-start md:flex-row md:flex-nowrap flex-wrap flex-col\">\n    <div class=\"flex-grow flex flex-wrap md:pl-20 -mb-10 md:mt-0 mt-10 md:text-left text-center\">\n      <div class=\"lg:w-1/3 md:w-1/2 w-full px-4\">\n        <h2 class=\"title-font font-medium text-gray-900 tracking-widest text-sm mb-3\">Accident Step 1</h2>\n        <nav class=\"list-none mb-10\">\n          <li>\n            <p>Starting day of insurance : {$AccidentStartingdayofinsurance}</p>\n          </li>\n          <li>\n            <p>Duration of insurance : {$AccidentDurationofinsurance}</p>\n          </li>\n          <li>\n            <p>Number of people : {$AccidentNumberofpeople}</p>\n          </li>\n          <li>\n            <p>Packet : {$AccidentPacket}</p>\n          </li>\n          <li>\n            <p>Personal Insurance : {$AccidentPersonalInsurance}</p>\n          </li>\n          <li>\n            <p>Registered athlete : {$AccidentRegisteredAthlete}</p>\n          </li>\n          \n        </nav>\n      </div>\n      <div class=\"lg:w-1/3 md:w-1/2 w-full px-4\">\n        <h2 class=\"title-font font-medium text-gray-900 tracking-widest text-sm mb-3\">Accident Step 2</h2>\n        <nav class=\"list-none mb-10\">\n          <li>\n            <p>Taxnumber: {$AccidentTaxnumber}</p>\n          </li>\n          <li>\n            <p>City : {$AccidentCity}</p>\n          </li>\n          <li>\n            <p>Street : {$AccidentStreet}</p>\n          </li>\n          <li>\n            <p>House Number : {$AccidentHouseNumber}</p>\n          </li>\n        </nav>\n      </div>\n      <div class=\"lg:w-1/3 md:w-1/2 w-full px-4\">\n        <h2 class=\"title-font font-medium text-gray-900 tracking-widest text-sm mb-3\">Accident Step 3</h2>\n        <nav class=\"list-none mb-10\">\n          <li>\n            <p>First Name : {$AccidentFirstName}</p>\n          </li>\n          <li>\n            <p>Last Name : {$AccidentLastName}</p>\n          </li>\n          <li>\n            <p>Date Of birth : {$AccidentDateOfbirth}</p>\n          </li>\n          <li>\n            <p>Email : {$AccidentEmail}</p>\n          </li>\n          <li>\n            <p>Gender CT : {$AccidentGenderCT}</p>\n          </li>\n        </nav>\n      </div>\n    </div>\n    <div class=\"w-64 flex-shrink-0 md:mx-0 mx-auto text-center md:text-left\">\n      <button on:click={removeListener} class=\"text-white bg-red-500 border-0 py-2 px-8 focus:outline-none hover:bg-red-600 rounded text-lg\">Submit</button>\n    </div>\n  </div>","<script>\n    import { currentStep, Numberofpeople, Startingdayofinsurance, Durationofinsurance, Durationoftrip, Riskexposure, Packet, Taxnumber, City, Street, HouseNumber, GenderCT, FirstName, LastName, DateOfbirth, Email, PhoneNumber } from './store.js'\n</script>\n\n<style>\n    #fakeForm { \n        display: none\n        }\n</style>\n\n<form id=\"fakeForm\">\n    <label for=\"Numberofpeople\">Numberofpeople</label>\n    <input type=\"text\" id=\"Numberofpeople\" name=\"Numberofpeople\" value={$Numberofpeople}>\n    <label for=\"Startingdayofinsurance\">Startingdayofinsurance:</label>\n    <input type=\"date\" id=\"Startingdayofinsurance\" name=\"lnamStartingdayofinsurancee\" value={$Startingdayofinsurance}>\n    <label for=\"Durationofinsurance\">Durationofinsurance:</label>\n    <input type=\"text\" id=\"Durationofinsurance\" name=\"Durationofinsurance\" value={$Durationofinsurance}>\n    <label for=\"Durationoftrip\">Durationoftrip:</label>\n    <input type=\"text\" id=\"Durationoftrip\" name=\"Durationoftrip\" value={$Durationoftrip}>\n    <label for=\"Riskexposure\">Riskexposure:</label>\n    <input type=\"text\" id=\"Riskexposure\" name=\"Riskexposure\" value={$Riskexposure}>\n    <label for=\"Packet\">Packet:</label>\n    <input type=\"text\" id=\"Packet\" name=\"Packet\" value={$Packet}>\n    <label for=\"Taxnumber\">Taxnumber:</label>\n    <input type=\"text\" id=\"Taxnumber\" name=\"Taxnumber\" value={$Taxnumber}>\n    <label for=\"City\">City:</label>\n    <input type=\"text\" id=\"City\" name=\"City\" value={$City}>\n    <label for=\"Street\">Street:</label>\n    <input type=\"text\" id=\"Street\" name=\"Street\" value={$Street}>\n    <label for=\"HouseNumber\">HouseNumber:</label>\n    <input type=\"text\" id=\"HouseNumber\" name=\"HouseNumber\" value={$HouseNumber}>\n    <label for=\"GenderCT\">GenderCT:</label>\n    <input type=\"text\" id=\"GenderCT\" name=\"GenderCT\" value={$GenderCT}>\n    <label for=\"FirstName\">FirstName:</label>\n    <input type=\"text\" id=\"FirstName\" name=\"FirstName\" value={$FirstName}>\n    <label for=\"LastName\">LastName:</label>\n    <input type=\"text\" id=\"LastName\" name=\"LastName\" value={$LastName}>\n    <label for=\"DateOfbirth\">DateOfbirth:</label>\n    <input type=\"date\" id=\"DateOfbirth\" name=\"DateOfbirth\" value={$DateOfbirth}>\n    <label for=\"FirstName\">Email:</label>\n    <input type=\"text\" id=\"Email\" name=\"Email\" value={$Email}>\n    <label for=\"PhoneNumber\">PhoneNumber:</label>\n    <input type=\"text\" id=\"PhoneNumber\" name=\"PhoneNumber\" value={$PhoneNumber}>\n    \n    <input type=\"submit\" id=\"submitForm\" value=\"Submit\">\n</form>","<script>\n    import { AccidentStartingdayofinsurance, AccidentDurationofinsurance, AccidentNumberofpeople, AccidentPacket, AccidentPersonalInsurance, AccidentRegisteredAthlete, AccidentTaxnumber, AccidentCity, AccidentStreet, AccidentHouseNumber, AccidentFirstName, AccidentLastName, AccidentDateOfbirth, AccidentEmail, AccidentGenderCT } from './store.js'\n</script>\n\n<style>\n    #fakeFormAccident { \n        display: none\n    }\n</style>\n\n<form id=\"fakeFormAccident\">\n    <label for=\"Startingdayofinsurance\">Startingdayofinsurance:</label>\n    <input type=\"date\" id=\"Startingdayofinsurance\" name=\"lnamStartingdayofinsurancee\" value={$AccidentStartingdayofinsurance}>\n    <label for=\"Durationofinsurance\">Durationofinsurance:</label>\n    <select value={$AccidentDurationofinsurance} id=\"Durationofinsurance\" name=\"Durationofinsurance\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n        <option value=\"206450000\">1 year with automatic renewal</option>\n        <option value=\"206450001\">1 year without automatic renewal</option>\n      </select>\n    <label for=\"Numberofpeople\">Numberofpeople</label>\n    <input type=\"number\" id=\"Numberofpeople\" name=\"Numberofpeople\" value={$AccidentNumberofpeople}>\n    <label for=\"Packet\">Packet:</label>\n    <select value={$AccidentPacket} id=\"Packet\" name=\"Packet\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n        <option value=\"206450000\">Small package</option>\n        <option value=\"206450001\">Big package</option>\n        <option value=\"206450002\">Comfort package</option>\n    </select>\n    <label for=\"PersonalInsurance\">PersonalInsurance:</label>\n    <select value={$AccidentPersonalInsurance} id=\"PersonalInsurance\" name=\"PersonalInsurance\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n        <option value=\"206450002\">Yes</option>\n        <option value=\"206450003\">No</option>\n    </select>\n    <label for=\"RegisteredAthlete\">RegisteredAthlete:</label>\n    <select value={$AccidentRegisteredAthlete} id=\"RegisteredAthlete\" name=\"RegisteredAthlete\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n        <option value=\"206450000\">Yes</option>\n        <option value=\"206450001\">No</option>\n    </select>\n    <label for=\"Taxnumber\">Taxnumber:</label>\n    <input type=\"text\" id=\"Taxnumber\" name=\"Taxnumber\" value={$AccidentTaxnumber}>\n    <label for=\"City\">City:</label>\n    <input type=\"text\" id=\"City\" name=\"City\" value={$AccidentCity}>\n    <label for=\"Street\">Street:</label>\n    <input type=\"text\" id=\"Street\" name=\"Street\" value={$AccidentStreet}>\n    <label for=\"HouseNumber\">HouseNumber:</label>\n    <input type=\"text\" id=\"HouseNumber\" name=\"HouseNumber\" value={$AccidentHouseNumber}>\n    <label for=\"FirstName\">FirstName:</label>\n    <input type=\"text\" id=\"FirstName\" name=\"FirstName\" value={$AccidentFirstName}>\n    <label for=\"LastName\">LastName:</label>\n    <input type=\"text\" id=\"LastName\" name=\"LastName\" value={$AccidentLastName}>\n    <label for=\"DateOfbirth\">Date of birth:</label>\n    <input type=\"date\" id=\"DateOfbirth\" name=\"DateOfbirth\" value={$AccidentDateOfbirth}>\n\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\" value={$AccidentEmail}>\n\n    <label for=\"GenderCT\">GenderCT:</label>\n    <select value={$AccidentGenderCT} id=\"AccidentGenderCT\" name=\"AccidentGenderCT\" class=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-2 px-3 leading-8 transition-colors duration-200 ease-in-out\">\n        <option value=\"1\">Male</option>\n        <option value=\"2\">Female</option>\n        <option value=\"3\">Undefined</option>\n      </select>    \n    <input type=\"submit\" id=\"submitForm\" value=\"Submit\">\n</form>","<script>\n    import { currentStep, Numberofpeople, Startingdayofinsurance, Durationofinsurance, Durationoftrip, Riskexposure, Packet, Taxnumber, City, Street, HouseNumber, GenderCT, FirstName, LastName, DateOfbirth, Email, PhoneNumber } from './store.js'\n</script>\n\n<style>\n    #fakeFormTravel { \n        display: none\n    }\n</style>\n\n<form id=\"fakeFormTravel\" style=\"display:none\">\n    <label for=\"Numberofpeople\">Numberofpeople</label>\n    <select value={$Numberofpeople} id=\"Numberofpeople\" name=\"Numberofpeople\" >\n        <option value=\"206450000\">Individually</option>\n        <option value=\"206450001\">Family</option>\n        <option value=\"206450002\">Group</option>\n    </select>\n    <label for=\"Startingdayofinsurance\">Startingdayofinsurance:</label>\n    <input type=\"date\" id=\"Startingdayofinsurance\" name=\"lnamStartingdayofinsurancee\" value={$Startingdayofinsurance}>\n    <label for=\"Durationofinsurance\">Durationofinsurance:</label>\n    <select value={$Durationofinsurance} id=\"Durationofinsurance\" name=\"Durationofinsurance\" >\n        <option value=\"206450002\">2 days</option>\n        <option value=\"206450003\">3 days</option>\n        <option value=\"206450004\">5 days</option>\n        <option value=\"206450005\">8 days</option>\n        <option value=\"206450006\">15 days</option>\n        <option value=\"206450007\">21 days</option>\n        <option value=\"206450008\">30 days</option>\n        <option value=\"206450009\">60 days</option>\n        <option value=\"206450010\">1 year</option>\n      </select>\n    <label for=\"Durationoftrip\">Durationoftrip:</label>\n    <select value={$Durationoftrip} id=\"Durationoftrip\" name=\"Durationoftrip\" >\n        <option value=\"206450000\">Less than 90 days</option>\n        <option value=\"206450001\">90 or more days</option>\n    </select>\n    <label for=\"Riskexposure\">Riskexposure:</label>\n    <select value={$Riskexposure} id=\"Riskexposure\" name=\"Riskexposure\" >\n        <option value=\"206450000\">Yes</option>\n        <option value=\"206450001\">No</option>\n      </select>\n    <label for=\"Packet\">Packet:</label>\n    <select value={$Packet} id=\"Packet\" name=\"Packet\">\n        <option value=\"206450000\">A</option>\n        <option value=\"206450001\">B</option>\n        <option value=\"206450002\">C</option>\n      </select>\n    <label for=\"Taxnumber\">Taxnumber:</label>\n    <input type=\"text\" id=\"Taxnumber\" name=\"Taxnumber\" value={$Taxnumber}>\n    <label for=\"City\">City:</label>\n    <input type=\"text\" id=\"City\" name=\"City\" value={$City}>\n    <label for=\"Street\">Street:</label>\n    <input type=\"text\" id=\"Street\" name=\"Street\" value={$Street}>\n    <label for=\"HouseNumber\">HouseNumber:</label>\n    <input type=\"text\" id=\"HouseNumber\" name=\"HouseNumber\" value={$HouseNumber}>\n    <label for=\"GenderCT\">GenderCT:</label>\n    <select value={$GenderCT} id=\"GenderCT\" name=\"GenderCT\" >\n        <option value=\"1\">Male</option>\n        <option value=\"2\">Female</option>\n        <option value=\"3\">Undefined</option>\n      </select>\n    <label for=\"FirstName\">FirstName:</label>\n    <input type=\"text\" id=\"FirstName\" name=\"FirstName\" value={$FirstName}>\n    <label for=\"LastName\">LastName:</label>\n    <input type=\"text\" id=\"LastName\" name=\"LastName\" value={$LastName}>\n    <label for=\"DateOfbirth\">DateOfbirth:</label>\n    <input type=\"date\" id=\"DateOfbirth\" name=\"DateOfbirth\" value={$DateOfbirth}>\n    <label for=\"Email\">Email:</label>\n    <input type=\"text\" id=\"Email\" name=\"Email\" value={$Email}>\n    <label for=\"PhoneNumber\">PhoneNumber:</label>\n    <input type=\"text\" id=\"PhoneNumber\" name=\"PhoneNumber\" value={$PhoneNumber}>\n    \n    <input type=\"submit\" id=\"submitForm\" value=\"Submit\">\n</form>","<script>\n    import { currentStep, Numberofpeople, Startingdayofinsurance, Durationofinsurance, Durationoftrip, Riskexposure, Packet, Taxnumber, City, Street, HouseNumber, GenderCT, FirstName, LastName, DateOfbirth, Email, PhoneNumber } from './store.js'\n</script>\n\n<style>\n    #fakeFormTravelComplete { \n        display: none\n    }\n</style>\n\n<form id=\"fakeFormTravelComplete\" style=\"display:none\">\n    <label for=\"Email\">Email:</label>\n    <input type=\"text\" id=\"Email\" name=\"Email\" value={$Email}>\n    <input type=\"submit\" id=\"submitForm\" value=\"Submit\">\n</form>","<script>\n  import Step1 from './Steps/Step1.svelte';\n  import Step2 from './Steps/Step2.svelte';\n  import Step3 from './Steps/Step3.svelte';\n  import Step4 from './Steps/Step4.svelte';\n  import AccidentStep1 from './AccidentSteps/Step1.svelte';\n  import AccidentStep2 from './AccidentSteps/Step2.svelte';\n  import AccidentStep3 from './AccidentSteps/Step3.svelte';\n  import AccidentStep4 from './AccidentSteps/Step4.svelte';\n  import FakeForm from './FakeForm.svelte';\n  import FakeFormAccident from './FakeFormAccident.svelte';\n  import FakeFormTravel from './FakeFormTravel.svelte';\n  import FakeFormTravelComplete from './FakeFormTravelComplete.svelte';\n  \n  // import jQuery from 'jquery'\n\n\n  import { formType, AccidentEmail, AccidentPacket, AccidentNumberofpeople, AccidentDurationofinsurance, AccidentFirstName, AccidentLastName, AccidentDateOfbirth, Durationofinsurance, Durationoftrip, Numberofpeople, Packet, currentStep, FirstName, LastName, DateOfbirth, Startingdayofinsurance, Email } from './store.js';\n\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    console.log('ovde sam');\n    // MsCrmMkt.MsCrmFormLoader.on(\"formLoad\", function(event) {\n    //   console.log(event);\n    //   console.log('form loaded');\n    // })\n\n    // MsCrmMkt.MsCrmFormLoader.on(\"formRender\", function(event) {\n    //   console.log(event);\n    //   console.log('form redndered');\n    // })\n\n    function track_msdynmkt_testtrigger1_105503091() {\n      const email = document.getElementById('Email').value;\n      console.log(\"ovo je email\", email);\n        window[\"msdynmkt\"].setUser({ authId: email});   // ID, e-mail or phone number - see instructions\n        window[\"msdynmkt\"].trackEvent({\n            name: \"msdynmkt_testtrigger1_105503091\", //Trigger title: testTrigger1\n            ingestionKey : \"b1d765b9c293466bb1ef2ac825fc18f8-3d35c0db-60a3-4e5b-a38a-626cf4a27efb-7558\",\n            version: \"1.0.0\",\n\t    // To learn more about the event properties below, please see the documentation on Special attributes for custom triggers.\n\t    properties: {\n\t\t \"bindingid\" : \"\",\n\t\t \"jobtitle\" : \"Tomicc\",\n\t\t \"lastname\" : \"Tomicc\"\n\t    }\n      \n\t});\n  console.log(window[\"msdynmkt\"]);\n  console.log(\"trek skripta\"); \n\n    }\n\n    d365mktformcapture\n        .waitForElement('#fakeFormTravel') // example: \"#form1\" as a selector for form with id=\"form1\"\n        .then((form) => {\n          console.log('mapiranje');\n          console.log(form);\n          //newSubmit();\n\n         \n            const mappings = [\n            {\n              FormFieldName: 'City',\n              DataverseFieldName: 'lastname',\n            },\n            {\n              FormFieldName: 'Taxnumber',\n              DataverseFieldName: 'jobtitle',\n            },\n            {\n              FormFieldName: 'Email',\n              DataverseFieldName: 'emailaddress1',\n            },\n          ];\n\n          console.log(mappings);\n\n          window.addEventListener(\n            'unload',\n            (e) => {\n              e.preventDefault();\n              \n              //newSubmit();\n              const serializedForm = d365mktformcapture.serializeForm(\n                form,\n                mappings,\n              );\n              console.log(JSON.stringify(serializedForm)); // NOTE: enable for debugging //https://cors-anywhere.herokuapp.com\n              const payload = serializedForm.SerializedForm.build();\n              console.log(payload);  \n\n              const captureConfig = {\n                FormId: 'dee03d17-94e7-ef11-9342-000d3aba33c2',\n                FormApiUrl:\n                  'https://cors-anywhere.herokuapp.com/https://public-eur.mkt.dynamics.com/api/v1.0/orgs/9bc5e4fe-4bda-ef11-b8e4-000d3ab73d5f/landingpageforms',\n              };\n              const formedUrl =\n                  'https://public-eur.mkt.dynamics.com/api/v1.0/orgs/9bc5e4fe-4bda-ef11-b8e4-000d3ab73d5f/landingpageforms/forms/dee03d17-94e7-ef11-9342-000d3aba33c2';\n\n              // d365mktformcapture\n              //   .submitForm(captureConfig, payload)\n              //   .catch((e) => {\n              //     console.log(e);\n              //     console.log('Form submission failed');\n              //   });\n\n              if (document.getElementById('Email').value.trim() !== '') {\n                fetch(formedUrl, {\n                  method: 'post',\n                  headers:{\n                    'Content-Type': 'application/json;charset=UTF-8'\n                  },\n                  body: payload.data,\n                  keepalive: true\n                })\n                .then(() => { console.log('submission complete') });\n                track_msdynmkt_testtrigger1_105503091()\n              } else {\n                console.log(\"nema\")\n                return\n              }\n\n                \n             \n\n              console.log('AAAAAAAAAAAAAAAAAAAAAAAAAAAA');\n            },\n            true,\n          );\n\n\n\n          form.addEventListener(\n            'submit',\n            (e) => {\n              e.preventDefault();\n              //newSubmit();\n              \n              const serializedForm = d365mktformcapture.serializeForm(\n                form,\n                mappings,\n              );\n              console.log(JSON.stringify(serializedForm)); // NOTE: enable for debugging //https://cors-anywhere.herokuapp.com\n              const payload = serializedForm.SerializedForm.build();\n              console.log(payload);  \n\n              const captureConfig = {\n                FormId: 'dee03d17-94e7-ef11-9342-000d3aba33c2',\n                FormApiUrl:\n                  'https://cors-anywhere.herokuapp.com/https://public-eur.mkt.dynamics.com/api/v1.0/orgs/9bc5e4fe-4bda-ef11-b8e4-000d3ab73d5f/landingpageforms',\n              };\n              const formedUrl =\n                  'https://public-eur.mkt.dynamics.com/api/v1.0/orgs/9bc5e4fe-4bda-ef11-b8e4-000d3ab73d5f/landingpageforms/forms/dee03d17-94e7-ef11-9342-000d3aba33c2';\n\n              // d365mktformcapture\n              //   .submitForm(captureConfig, payload)\n              //   .catch((e) => {\n              //     console.log(e);\n              //     console.log('Form submission failed');\n              //   });\n\n              if (document.getElementById('Email').value.trim() !== '') {\n                fetch(formedUrl, {\n                  method: 'post',\n                  headers:{\n                    'Content-Type': 'application/json;charset=UTF-8'\n                  },\n                  body: payload.data,\n                  keepalive: true\n                })\n                .then(() => { console.log('submission complete') });\n                track_msdynmkt_testtrigger1_105503091()\n              } else {\n                console.log(\"nema\")\n                return\n              }\n\n                \n             \n\n              console.log('AAAAAAAAAAAAAAAAAAAAAAAAAAAA');\n            },\n            true,\n          );\n          \n         \n   });\n   \n\n\n    console.log(\"na dnu mscrmmkt func\");\n  });\n  console.log(\"izasaoa\");\n \n  \n\n  function submitForm(event) {\n    // event.preventDefault();\n    if($AccidentEmail) { //$Email ||\n      console.log(\"U submit formu\")\n      console.log(\"ovde sam u subtim formu, prvom ifu\")\n      } else {\n        console.log('submitting accident....')\n        // MsCrmMkt.MsCrmFormLoader.sendFormCaptureToCrm(document.getElementById('fakeFormAccident')).then((e) => {\n        //     console.log(e)\n        //     console.log('Accident - Submission Complete');\n        //     // track_msdynmkt_acforaccidentinsurancetest_101137115();\n        //    // track_msdynmkt_abandoncarttrigger_142637121(); \n        // });\n\n        // MsCrmMkt.MsCrmFormLoader.on(\"afterFormSubmit\", function(event) {\n        //   console.log(event);\n        // });\n      }\n    }\n  \n\n  function removeListener() {\n    //window.removeEventListener('beforeunload', event => submitForm(event));\n    // if($Email) {\n    //   if($formType == \"Travel\") {\n    //     console.log('submitting travel exit form')\n    //     //track_msdynmkt_exittrigger_travelinsurancetest_145414019()\n    //     MsCrmMkt.MsCrmFormLoader.sendFormCaptureToCrm(document.getElementById('fakeFormTravelComplete')).then((e) => {\n    //       console.log('Travel Exit form submitted')\n    //     })\n    //   } else {\n    //     console.log('submit accident exit trigger')\n    //   }\n    // }\n    // document.getElementById(\"fakeForm\").submit()\n    // console.log(\"subitovcao sam ali ovde\");\n  }\n\n  // function track_msdynmkt_exittrigger_travelinsurancetest_145414019() {\n  //       window[\"msdynmkt\"].setUser({ authId: \"<customer-id>\"});   // ID, e-mail or phone number - see instructions\n  //       window[\"msdynmkt\"].trackEvent({\n  //           name: \"msdynmkt_exittrigger_travelinsurancetest_145414019\", //Trigger title: Exit Trigger - Travel Insurance Test\n  //           ingestionKey : \"c233c22448aa4a799feedf6dd734d9c4-853de410-b103-4f95-91e2-b5d81be6e270-7136\",\n  //           version: \"1.0.0\" ,\n\t//     properties: {\n\t// \t \"bindingid\" : \"Test789\"\n\t// \t}\n  //       });\n  //   }\n     \n  // function track_msdynmkt_abandonedcartfortravelinsurance_094020074() {\n  //   let duration = \"\";\n  //   switch($Durationofinsurance) {\n  //     case 206450002:\n  //       duration = \"2 days\"\n  //       break;\n  //     case 206450003:\n  //       duration = \"3 days\"\n  //       break;\n  //     case 206450004:\n  //       duration = \"5 days\"\n  //       break;\n  //     case 206450005:\n  //       duration = \"8 days\"\n  //       break;\n  //     case 206450006:\n  //       duration = \"15 days\"\n  //       break;\n  //     case 206450007:\n  //       duration = \"21 days\"\n  //       break;\n  //     case 206450008:\n  //       duration = \"30 days\"\n  //       break;\n  //     case 206450009:\n  //       duration = \"60 days\"\n  //       break;\n  //     case 206450010:\n  //       duration = \"1 year\"\n  //       break;\n  //   }\n\n  //       window[\"msdynmkt\"].setUser({ authId: $Email});   // ID, e-mail or phone number - see instructions\n  //       window[\"msdynmkt\"].trackEvent({\n  //           name: \"msdynmkt_abandonedcartfortravelinsurance_094020074\", //Trigger title: Abandoned Cart for Travel Insurance\n  //           ingestionKey : \"c233c22448aa4a799feedf6dd734d9c4-853de410-b103-4f95-91e2-b5d81be6e270-7136\",\n  //           version: \"1.0.0\" ,\n\t//     properties: {\n  //       \"dateofbirth\" : $DateOfbirth.toLocaleDateString('en-GB'),\n  //         \"durationofinsurance\" : duration,  \n  //         \"durationoftravel\" : ($Durationoftrip == 206450000) ? \"Less than 90 days\" : \"90 or more days\",\n  //         \"firstname\" : $FirstName,\n  //         \"lastname\" : $LastName,\n  //         \"numberofpeople\" : ($Numberofpeople == 206450000) ? \"Individually\" : ($Numberofpeople == 206450001) ? \"Family\" : \"Group\",\n  //         \"travelpackage\" : ($Packet == 206450000) ? \"A\" : ($Packet == 206450001) ? \"B\" : \"C\",\n  //         \"bindingid\" : \"bindingid\"\n\t// \t  }\n  //       });\n  //   }\n\n  let count_value;\n\n  currentStep.subscribe((value) => {\n    count_value = value;\n  });\n\n  let beforeLoadSet = false;\n\n  let setStep = (val) => {\n    console.log(val)\n      currentStep.update((n) => val);\n      \n      if ($currentStep == 4 && !beforeLoadSet) {\n        console.log('before unload set')\n        beforeLoadSet = true;\n        //window.addEventListener('unload', event => submitForm(event));\n        window.addEventListener(\"beforeunload\", (event) => {\n          event.preventDefault(); \n        submitForm();\n        });\n      }\n  }\n\n  let active = \"bg-gray-100 border-red-500 text-red-500 rounded-t\"\n  let notactive = \"border-gray-200 hover:text-gray-900\"\n</script>\n\n\n<section class=\"text-gray-600 body-font\">\n<div class=\"container px-5 mx-auto flex flex-wrap flex-col\">\n  <div class=\"flex mx-auto flex-wrap mb-5\">\n    <div class=\"flex mr-6 items-center\">\n      <span class=\"mr-3\">Form: </span>\n      <div class=\"relative\">\n        <select bind:value={$formType} class=\"rounded border appearance-none border-gray-300 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-200 focus:border-indigo-500 text-base pl-3 pr-10\">\n          <option>Travel</option>\n          <option>Accident</option>\n        </select>\n        <span class=\"absolute right-0 top-0 h-full w-10 text-center text-gray-600 pointer-events-none flex items-center justify-center\">\n          <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" class=\"w-4 h-4\" viewBox=\"0 0 24 24\">\n            <path d=\"M6 9l6 6 6-6\"></path>\n          </svg>\n        </span>\n      </div>\n    </div>\n    <a on:click={() => setStep(1)} class=\"{$currentStep == 1 ? active : notactive} sm:px-6 py-3 w-1/2 sm:w-auto justify-center sm:justify-start border-b-2 title-font font-medium inline-flex items-center leading-none border-gray-200 hover:text-gray-900 tracking-wider\">\n      <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" class=\"w-5 h-5 mr-3\" viewBox=\"0 0 24 24\">\n        <path d=\"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z\"></path>\n      </svg>STEP 1\n    </a>\n    <a on:click={() => setStep(2)} class=\"{$currentStep == 2 ? active : notactive} sm:px-6 py-3 w-1/2 sm:w-auto justify-center sm:justify-start border-b-2 title-font font-medium inline-flex items-center leading-none border-gray-200 hover:text-gray-900 tracking-wider\">\n      <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" class=\"w-5 h-5 mr-3\" viewBox=\"0 0 24 24\">\n        <path d=\"M22 12h-4l-3 9L9 3l-3 9H2\"></path>\n      </svg>STEP 2\n    </a>\n    <a on:click={() => setStep(3)} class=\"{$currentStep == 3 ? active : notactive} sm:px-6 py-3 w-1/2 sm:w-auto justify-center sm:justify-start border-b-2 title-font font-medium inline-flex items-center leading-none border-gray-200 hover:text-gray-900 tracking-wider\">\n      <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" class=\"w-5 h-5 mr-3\" viewBox=\"0 0 24 24\">\n        <circle cx=\"12\" cy=\"5\" r=\"3\"></circle>\n        <path d=\"M12 22V8M5 12H2a10 10 0 0020 0h-3\"></path>\n      </svg>STEP 3\n    </a>\n    <a on:click={() => setStep(4)} class=\"{$currentStep == 4 ? active : notactive} sm:px-6 py-3 w-1/2 sm:w-auto justify-center sm:justify-start border-b-2 title-font font-medium inline-flex items-center leading-none border-gray-200 hover:text-gray-900 tracking-wider\">\n      <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" class=\"w-5 h-5 mr-3\" viewBox=\"0 0 24 24\">\n        <path d=\"M20 21v-2a4 4 0 00-4-4H8a4 4 0 00-4 4v2\"></path>\n        <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\n      </svg>STEP 4\n    </a>\n  </div>\n  \n  {#if count_value == 1}\n    {#if $formType == \"Travel\"}\n      <Step1 />\n    {:else}\n      <AccidentStep1 />\n    {/if}\n  {:else if count_value == 2}\n    {#if $formType == \"Travel\"}\n      <Step2 />\n    {:else}\n      <AccidentStep2 />\n    {/if}\n  {:else if count_value == 3}\n    {#if $formType == \"Travel\"}\n      <Step3 />\n    {:else}\n      <AccidentStep3 />\n    {/if}\n  {:else if count_value == 4}\n      {#if $formType == \"Travel\"}\n        <Step4 on:userSubmit={removeListener}/>\n      {:else}\n        <AccidentStep4 on:userSubmit={removeListener}/>\n      {/if}\n  {/if}\n\n  <FakeForm />\n  <FakeFormAccident />\n  <FakeFormTravel />\n  <FakeFormTravelComplete />\n</div>\n</section>","<script>\n\timport { Router, Link, Route } from \"svelte-routing\";\n  import Steps from \"./Steps.svelte\"\n\texport let url = \"/\";\n\n</script>\n\n\n<Router {url}>\n\t<nav>\n\t\t<Link to=\"/\" />\n  </nav> \n  <div>\n\t\t<Route path=\"/\"><Steps /></Route>\n\t</div>\n</Router>\n\n<style global>\n  @tailwind base;\n  @tailwind components;\n  @tailwind utilities;\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n  target: document.body,\n  props: {\n    name: 'world',\n  },\n});\n\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","to_number","set_data","wholeText","set_input_value","input","set_style","important","setProperty","select_option","select","option","__value","selected","select_value","selected_option","querySelector","current_component","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","bubbles","e","createEvent","initCustomEvent","custom_event","call","setContext","context","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","update","pop","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","handle_promise","promise","info","token","index","resolved","child_ctx","current","needs_flush","blocks","m","mount","then","error","catch","hasCatch","pending","get_spread_update","levels","updates","to_null_out","accounted_for","n","get_spread_object","spread_props","create_component","mount_component","customElement","on_mount","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","Map","skip_bound","root","ready","ret","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","indexOf","splice","$set","$$props","obj","$$set","LOCATION","ROUTER","HISTORY","PARAM","segmentize","uri","replace","split","stripSlashes","string","rankRoute","route","score","default","path","reduce","segment","test","SEGMENT_POINTS","pick","routes","match","default_","uriPathname","uriSegments","isRootUri","ranked","sort","rankRoutes","missed","params","routeSegments","routeSegment","uriSegment","decodeURIComponent","join","dynamicMatch","exec","addQuery","pathname","query","combinePaths","basepath","canUseDOM","window","to","state","getProps","location","base","navigate","dispatch","href","isPartiallyCurrent","isCurrent","$base","startsWith","toPathname","toQuery","basePathname","toSegments","baseSegments","concat","allSegments","segments","$location","ariaCurrent","existingProps","$$restProps","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","shouldNavigate","preventDefault","shouldReplace","routeParams","routeProps","registerRoute","unregisterRoute","activeRoute","$activeRoute","toString","scrollTo","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","cleanup","sync","unsubscribers","getLocation","source","history","globalHistory","listeners","listener","popstateListener","action","Date","now","replaceState","pushState","activeElement","blur","createHistory","initialPathname","stack","search","states","entries","_","createMemorySource","url","locationContext","routerContext","hasActiveRoute","routerBase","_path","matchingRoute","rs","bestMatch","$routes","formType","currentStep","Numberofpeople","Startingdayofinsurance","Durationofinsurance","Durationoftrip","Riskexposure","Packet","Taxnumber","City","Street","HouseNumber","GenderCT","FirstName","LastName","DateOfbirth","Email","PhoneNumber","AccidentStartingdayofinsurance","AccidentDurationofinsurance","AccidentNumberofpeople","AccidentPacket","AccidentPersonalInsurance","AccidentRegisteredAthlete","AccidentTaxnumber","AccidentCity","AccidentStreet","AccidentHouseNumber","AccidentFirstName","AccidentLastName","AccidentDateOfbirth","AccidentEmail","AccidentGenderCT","setStep","val","$Numberofpeople","$Startingdayofinsurance","$Durationofinsurance","$Durationoftrip","$Riskexposure","$Packet","$Taxnumber","$City","$Street","$HouseNumber","$GenderCT","$FirstName","$LastName","$DateOfbirth","$Email","$PhoneNumber","removeListener","form","getElementById","Event","cancelable","dispatchEvent","console","log","$AccidentStartingdayofinsurance","$AccidentDurationofinsurance","$AccidentNumberofpeople","$AccidentPacket","$AccidentPersonalInsurance","$AccidentRegisteredAthlete","$AccidentTaxnumber","$AccidentCity","$AccidentStreet","$AccidentHouseNumber","$AccidentFirstName","$AccidentLastName","$AccidentDateOfbirth","$AccidentEmail","$AccidentGenderCT","active","notactive","count_value","track_msdynmkt_testtrigger1_105503091","email","setUser","authId","trackEvent","ingestionKey","version","properties","bindingid","jobtitle","lastname","d365mktformcapture","waitForElement","mappings","FormFieldName","DataverseFieldName","serializedForm","serializeForm","JSON","stringify","payload","SerializedForm","build","trim","fetch","method","headers","body","keepalive","beforeLoadSet","$currentStep","$formType"],"mappings":"gCAAA,SAASA,KAET,SAASC,EAAOC,EAAKC,GAEjB,IAAK,MAAMC,KAAKD,EACZD,EAAIE,GAAKD,EAAIC,GACjB,OAAOF,EAUX,SAASG,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAqBhF,SAASE,EAAUC,KAAUC,GACzB,GAAa,MAATD,EACA,OAAOnB,EAEX,MAAMqB,EAAQF,EAAMD,aAAaE,GACjC,OAAOC,EAAMC,YAAc,IAAMD,EAAMC,cAAgBD,EAO3D,SAASE,EAAoBC,EAAWL,EAAOM,GAC3CD,EAAUE,GAAGC,WAAWC,KAAKV,EAAUC,EAAOM,IAElD,SAASI,EAAYC,EAAYC,EAAKC,EAAS1B,GAC3C,GAAIwB,EAAY,CACZ,MAAMG,EAAWC,EAAiBJ,EAAYC,EAAKC,EAAS1B,GAC5D,OAAOwB,EAAW,GAAGG,IAG7B,SAASC,EAAiBJ,EAAYC,EAAKC,EAAS1B,GAChD,OAAOwB,EAAW,IAAMxB,EAClBL,EAAO+B,EAAQD,IAAII,QAASL,EAAW,GAAGxB,EAAGyB,KAC7CC,EAAQD,IAElB,SAASK,EAAiBN,EAAYE,EAASK,EAAO/B,GAClD,GAAIwB,EAAW,IAAMxB,EAAI,CACrB,MAAMgC,EAAOR,EAAW,GAAGxB,EAAG+B,IAC9B,QAAsBE,IAAlBP,EAAQK,MACR,OAAOC,EAEX,GAAoB,iBAATA,EAAmB,CAC1B,MAAME,EAAS,GACTC,EAAMC,KAAKC,IAAIX,EAAQK,MAAMO,OAAQN,EAAKM,QAChD,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAKI,GAAK,EAC1BL,EAAOK,GAAKb,EAAQK,MAAMQ,GAAKP,EAAKO,GAExC,OAAOL,EAEX,OAAOR,EAAQK,MAAQC,EAE3B,OAAON,EAAQK,MAEnB,SAASS,EAAiBC,EAAMC,EAAiBjB,EAAKC,EAASiB,EAAcC,GACzE,GAAID,EAAc,CACd,MAAME,EAAejB,EAAiBc,EAAiBjB,EAAKC,EAASkB,GACrEH,EAAKK,EAAED,EAAcF,IAO7B,SAASI,EAAyBrB,GAC9B,GAAIA,EAAQD,IAAIa,OAAS,GAAI,CACzB,MAAMP,EAAQ,GACRO,EAASZ,EAAQD,IAAIa,OAAS,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,IACxBR,EAAMQ,IAAM,EAEhB,OAAOR,EAEX,OAAQ,EAEZ,SAASiB,EAAuBC,GAC5B,MAAMC,EAAS,GACf,IAAK,MAAMpD,KAAKmD,EACC,MAATnD,EAAE,KACFoD,EAAOpD,GAAKmD,EAAMnD,IAC1B,OAAOoD,EAEX,SAASC,EAAmBF,EAAOG,GAC/B,MAAMC,EAAO,GACbD,EAAO,IAAIE,IAAIF,GACf,IAAK,MAAMtD,KAAKmD,EACPG,EAAKG,IAAIzD,IAAe,MAATA,EAAE,KAClBuD,EAAKvD,GAAKmD,EAAMnD,IACxB,OAAOuD,EAmLX,SAASG,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAoDvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAUxC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAQhC,SAASQ,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAiBlC,SAASG,EAAYH,GACjB,OAAOC,SAASG,gBAAgB,6BAA8BJ,GAElE,SAASK,EAAKC,GACV,OAAOL,SAASM,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAEhB,SAASI,IACL,OAAOJ,EAAK,IAEhB,SAASK,EAAOnB,EAAMoB,EAAOC,EAASC,GAElC,OADAtB,EAAKuB,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMtB,EAAKwB,oBAAoBJ,EAAOC,EAASC,GA8B1D,SAASG,EAAKzB,EAAM0B,EAAWC,GACd,MAATA,EACA3B,EAAK4B,gBAAgBF,GAChB1B,EAAK6B,aAAaH,KAAeC,GACtC3B,EAAK8B,aAAaJ,EAAWC,GAErC,SAASI,EAAe/B,EAAMgC,GAE1B,MAAMC,EAAczF,OAAO0F,0BAA0BlC,EAAKmC,WAC1D,IAAK,MAAMC,KAAOJ,EACS,MAAnBA,EAAWI,GACXpC,EAAK4B,gBAAgBQ,GAER,UAARA,EACLpC,EAAKqC,MAAMC,QAAUN,EAAWI,GAEnB,YAARA,EACLpC,EAAK2B,MAAQ3B,EAAKoC,GAAOJ,EAAWI,GAE/BH,EAAYG,IAAQH,EAAYG,GAAKG,IAC1CvC,EAAKoC,GAAOJ,EAAWI,GAGvBX,EAAKzB,EAAMoC,EAAKJ,EAAWI,IA+BvC,SAASI,EAAUb,GACf,MAAiB,KAAVA,EAAe,MAAQA,EA4HlC,SAASc,EAAS3B,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAK4B,YAAc3B,IACnBD,EAAKC,KAAOA,GAEpB,SAAS4B,EAAgBC,EAAOjB,GAC5BiB,EAAMjB,MAAiB,MAATA,EAAgB,GAAKA,EAUvC,SAASkB,EAAU7C,EAAMoC,EAAKT,EAAOmB,GACjC9C,EAAKqC,MAAMU,YAAYX,EAAKT,EAAOmB,EAAY,YAAc,IAEjE,SAASE,EAAcC,EAAQtB,GAC3B,IAAK,IAAI9C,EAAI,EAAGA,EAAIoE,EAAO3B,QAAQ1C,OAAQC,GAAK,EAAG,CAC/C,MAAMqE,EAASD,EAAO3B,QAAQzC,GAC9B,GAAIqE,EAAOC,UAAYxB,EAEnB,YADAuB,EAAOE,UAAW,IAW9B,SAASC,EAAaJ,GAClB,MAAMK,EAAkBL,EAAOM,cAAc,aAAeN,EAAO3B,QAAQ,GAC3E,OAAOgC,GAAmBA,EAAgBH,QA2Q9C,IAAIK,EACJ,SAASC,EAAsBjG,GAC3BgG,EAAoBhG,EAExB,SAASkG,IACL,IAAKF,EACD,MAAM,IAAIG,MAAM,oDACpB,OAAOH,EAcX,SAASI,IACL,MAAMpG,EAAYkG,IAClB,MAAO,CAACG,EAAMC,KACV,MAAM1G,EAAYI,EAAUE,GAAGN,UAAUyG,GACzC,GAAIzG,EAAW,CAGX,MAAMgE,EA1OlB,SAAsByC,EAAMC,EAAQC,GAAU,GAC1C,MAAMC,EAAItD,SAASuD,YAAY,eAE/B,OADAD,EAAEE,gBAAgBL,EAAME,GAAS,EAAOD,GACjCE,EAuOeG,CAAaN,EAAMC,GACjC1G,EAAUe,QAAQvB,SAAQN,IACtBA,EAAG8H,KAAK5G,EAAW4D,QAKnC,SAASiD,EAAWjC,EAAKkC,GACrBZ,IAAwBhG,GAAG4G,QAAQ/B,IAAIH,EAAKkC,GAEhD,SAASC,EAAWnC,GAChB,OAAOsB,IAAwBhG,GAAG4G,QAAQE,IAAIpC,GAmBlD,MAAMqC,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoB3I,GACzBqI,EAAiB/G,KAAKtB,GAK1B,IAAI4I,GAAW,EACf,MAAMC,EAAiB,IAAIvF,IAC3B,SAASwF,IACL,IAAIF,EAAJ,CAEAA,GAAW,EACX,EAAG,CAGC,IAAK,IAAIrG,EAAI,EAAGA,EAAI4F,EAAiB7F,OAAQC,GAAK,EAAG,CACjD,MAAMrB,EAAYiH,EAAiB5F,GACnC4E,EAAsBjG,GACtB6H,EAAO7H,EAAUE,IAIrB,IAFA+F,EAAsB,MACtBgB,EAAiB7F,OAAS,EACnB8F,EAAkB9F,QACrB8F,EAAkBY,KAAlBZ,GAIJ,IAAK,IAAI7F,EAAI,EAAGA,EAAI8F,EAAiB/F,OAAQC,GAAK,EAAG,CACjD,MAAMpB,EAAWkH,EAAiB9F,GAC7BsG,EAAetF,IAAIpC,KAEpB0H,EAAeI,IAAI9H,GACnBA,KAGRkH,EAAiB/F,OAAS,QACrB6F,EAAiB7F,QAC1B,KAAOgG,EAAgBhG,QACnBgG,EAAgBU,KAAhBV,GAEJI,GAAmB,EACnBE,GAAW,EACXC,EAAeK,SAEnB,SAASH,EAAO3H,GACZ,GAAoB,OAAhBA,EAAG+H,SAAmB,CACtB/H,EAAG2H,SACH3I,EAAQgB,EAAGgI,eACX,MAAMrH,EAAQX,EAAGW,MACjBX,EAAGW,MAAQ,EAAE,GACbX,EAAG+H,UAAY/H,EAAG+H,SAASrG,EAAE1B,EAAGK,IAAKM,GACrCX,EAAGiI,aAAa/I,QAAQqI,IAiBhC,MAAMW,EAAW,IAAIhG,IACrB,IAAIiG,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACHC,EAAG,GACH5G,EAAGyG,GAGX,SAASI,IACAJ,EAAOE,GACRrJ,EAAQmJ,EAAOG,GAEnBH,EAASA,EAAOzG,EAEpB,SAAS8G,GAAcC,EAAOC,GACtBD,GAASA,EAAMtH,IACf+G,EAASS,OAAOF,GAChBA,EAAMtH,EAAEuH,IAGhB,SAASE,GAAeH,EAAOC,EAAO/F,EAAQ5C,GAC1C,GAAI0I,GAASA,EAAMI,EAAG,CAClB,GAAIX,EAAS/F,IAAIsG,GACb,OACJP,EAASL,IAAIY,GACbN,EAAOG,EAAEpI,MAAK,KACVgI,EAASS,OAAOF,GACZ1I,IACI4C,GACA8F,EAAMK,EAAE,GACZ/I,QAGR0I,EAAMI,EAAEH,IAqOhB,SAASK,GAAeC,EAASC,GAC7B,MAAMC,EAAQD,EAAKC,MAAQ,GAC3B,SAASvB,EAAOxB,EAAMgD,EAAOzE,EAAKT,GAC9B,GAAIgF,EAAKC,QAAUA,EACf,OACJD,EAAKG,SAAWnF,EAChB,IAAIoF,EAAYJ,EAAK5I,SACTQ,IAAR6D,IACA2E,EAAYA,EAAU5I,QACtB4I,EAAU3E,GAAOT,GAErB,MAAMwE,EAAQtC,IAAS8C,EAAKK,QAAUnD,GAAMkD,GAC5C,IAAIE,GAAc,EACdN,EAAKR,QACDQ,EAAKO,OACLP,EAAKO,OAAOtK,SAAQ,CAACuJ,EAAOtH,KACpBA,IAAMgI,GAASV,IACfL,IACAQ,GAAeH,EAAO,EAAG,GAAG,KACpBQ,EAAKO,OAAOrI,KAAOsH,IACnBQ,EAAKO,OAAOrI,GAAK,SAGzBoH,QAKRU,EAAKR,MAAMK,EAAE,GAEjBL,EAAMH,IACNE,GAAcC,EAAO,GACrBA,EAAMgB,EAAER,EAAKS,QAAST,EAAKxG,QAC3B8G,GAAc,GAElBN,EAAKR,MAAQA,EACTQ,EAAKO,SACLP,EAAKO,OAAOL,GAASV,GACrBc,GACA7B,IAGR,IAp1CgBzD,EAo1CD+E,IAn1CkB,iBAAV/E,GAA4C,mBAAfA,EAAM0F,KAm1CjC,CACrB,MAAM7D,EAAoBE,IAc1B,GAbAgD,EAAQW,MAAK1F,IACT8B,EAAsBD,GACtB6B,EAAOsB,EAAKU,KAAM,EAAGV,EAAKhF,MAAOA,GACjC8B,EAAsB,SACvB6D,IAIC,GAHA7D,EAAsBD,GACtB6B,EAAOsB,EAAKY,MAAO,EAAGZ,EAAKW,MAAOA,GAClC7D,EAAsB,OACjBkD,EAAKa,SACN,MAAMF,KAIVX,EAAKK,UAAYL,EAAKc,QAEtB,OADApC,EAAOsB,EAAKc,QAAS,IACd,MAGV,CACD,GAAId,EAAKK,UAAYL,EAAKU,KAEtB,OADAhC,EAAOsB,EAAKU,KAAM,EAAGV,EAAKhF,MAAO+E,IAC1B,EAEXC,EAAKG,SAAWJ,EA72CxB,IAAoB/E,EAy+CpB,SAAS+F,GAAkBC,EAAQC,GAC/B,MAAMvC,EAAS,GACTwC,EAAc,GACdC,EAAgB,CAAE9J,QAAS,GACjC,IAAIa,EAAI8I,EAAO/I,OACf,KAAOC,KAAK,CACR,MAAM0H,EAAIoB,EAAO9I,GACXkJ,EAAIH,EAAQ/I,GAClB,GAAIkJ,EAAG,CACH,IAAK,MAAM3F,KAAOmE,EACRnE,KAAO2F,IACTF,EAAYzF,GAAO,GAE3B,IAAK,MAAMA,KAAO2F,EACTD,EAAc1F,KACfiD,EAAOjD,GAAO2F,EAAE3F,GAChB0F,EAAc1F,GAAO,GAG7BuF,EAAO9I,GAAKkJ,OAGZ,IAAK,MAAM3F,KAAOmE,EACduB,EAAc1F,GAAO,EAIjC,IAAK,MAAMA,KAAOyF,EACRzF,KAAOiD,IACTA,EAAOjD,QAAO7D,GAEtB,OAAO8G,EAEX,SAAS2C,GAAkBC,GACvB,MAA+B,iBAAjBA,GAA8C,OAAjBA,EAAwBA,EAAe,GA4JtF,SAASC,GAAiB/B,GACtBA,GAASA,EAAMH,IAKnB,SAASmC,GAAgB3K,EAAWuC,EAAQI,EAAQiI,GAChD,MAAM3C,SAAEA,EAAQ4C,SAAEA,EAAQ1K,WAAEA,EAAUgI,aAAEA,GAAiBnI,EAAUE,GACnE+H,GAAYA,EAAS0B,EAAEpH,EAAQI,GAC1BiI,GAEDnD,GAAoB,KAChB,MAAMqD,EAAiBD,EAASE,IAAIlM,GAAKmM,OAAO3L,GAC5Cc,EACAA,EAAWC,QAAQ0K,GAKnB5L,EAAQ4L,GAEZ9K,EAAUE,GAAG2K,SAAW,MAGhC1C,EAAa/I,QAAQqI,GAEzB,SAASwD,GAAkBjL,EAAWkL,GAClC,MAAMhL,EAAKF,EAAUE,GACD,OAAhBA,EAAG+H,WACH/I,EAAQgB,EAAGC,YACXD,EAAG+H,UAAY/H,EAAG+H,SAASe,EAAEkC,GAG7BhL,EAAGC,WAAaD,EAAG+H,SAAW,KAC9B/H,EAAGK,IAAM,IAGjB,SAAS4K,GAAWnL,EAAWqB,IACI,IAA3BrB,EAAUE,GAAGW,MAAM,KACnBoG,EAAiB7G,KAAKJ,GAxvBrBwH,IACDA,GAAmB,EACnBH,EAAiBwC,KAAKjC,IAwvBtB5H,EAAUE,GAAGW,MAAMuK,KAAK,IAE5BpL,EAAUE,GAAGW,MAAOQ,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAASgK,GAAKrL,EAAW8D,EAASwH,EAAUC,EAAiBC,EAAWzJ,EAAO0J,EAAe5K,EAAQ,EAAE,IACpG,MAAM6K,EAAmB1F,EACzBC,EAAsBjG,GACtB,MAAME,EAAKF,EAAUE,GAAK,CACtB+H,SAAU,KACV1H,IAAK,KAELwB,MAAAA,EACA8F,OAAQrJ,EACRgN,UAAAA,EACAG,MAAO5M,IAEP8L,SAAU,GACV1K,WAAY,GACZyL,cAAe,GACf1D,cAAe,GACfC,aAAc,GACdrB,QAAS,IAAI+E,IAAIH,EAAmBA,EAAiBxL,GAAG4G,QAAUhD,EAAQgD,SAAW,IAErFlH,UAAWb,IACX8B,MAAAA,EACAiL,YAAY,EACZC,KAAMjI,EAAQvB,QAAUmJ,EAAiBxL,GAAG6L,MAEhDN,GAAiBA,EAAcvL,EAAG6L,MAClC,IAAIC,GAAQ,EAkBZ,GAjBA9L,EAAGK,IAAM+K,EACHA,EAAStL,EAAW8D,EAAQ/B,OAAS,IAAI,CAACV,EAAG4K,KAAQ9J,KACnD,MAAMgC,EAAQhC,EAAKf,OAASe,EAAK,GAAK8J,EAOtC,OANI/L,EAAGK,KAAOiL,EAAUtL,EAAGK,IAAIc,GAAInB,EAAGK,IAAIc,GAAK8C,MACtCjE,EAAG4L,YAAc5L,EAAGyL,MAAMtK,IAC3BnB,EAAGyL,MAAMtK,GAAG8C,GACZ6H,GACAb,GAAWnL,EAAWqB,IAEvB4K,KAET,GACN/L,EAAG2H,SACHmE,GAAQ,EACR9M,EAAQgB,EAAGgI,eAEXhI,EAAG+H,WAAWsD,GAAkBA,EAAgBrL,EAAGK,KAC/CuD,EAAQvB,OAAQ,CAChB,GAAIuB,EAAQoI,QAAS,CAEjB,MAAMC,EAhxClB,SAAkBnJ,GACd,OAAOoJ,MAAMC,KAAKrJ,EAAQsJ,YA+wCJC,CAASzI,EAAQvB,QAE/BrC,EAAG+H,UAAY/H,EAAG+H,SAASuE,EAAEL,GAC7BA,EAAM/M,QAAQyD,QAId3C,EAAG+H,UAAY/H,EAAG+H,SAASO,IAE3B1E,EAAQ2I,OACR/D,GAAc1I,EAAUE,GAAG+H,UAC/B0C,GAAgB3K,EAAW8D,EAAQvB,OAAQuB,EAAQnB,OAAQmB,EAAQ8G,eAEnEhD,IAEJ3B,EAAsByF,GAkD1B,MAAMgB,GACFC,WACI1B,GAAkB2B,KAAM,GACxBA,KAAKD,SAAWnO,EAEpBqO,IAAIxG,EAAMpG,GACN,MAAML,EAAagN,KAAK1M,GAAGN,UAAUyG,KAAUuG,KAAK1M,GAAGN,UAAUyG,GAAQ,IAEzE,OADAzG,EAAUQ,KAAKH,GACR,KACH,MAAMoJ,EAAQzJ,EAAUkN,QAAQ7M,IACjB,IAAXoJ,GACAzJ,EAAUmN,OAAO1D,EAAO,IAGpC2D,KAAKC,GA/yDT,IAAkBC,EAgzDNN,KAAKO,QAhzDCD,EAgzDkBD,EA/yDG,IAA5BjO,OAAOkD,KAAKgL,GAAK9L,UAgzDhBwL,KAAK1M,GAAG4L,YAAa,EACrBc,KAAKO,MAAMF,GACXL,KAAK1M,GAAG4L,YAAa,IC31D1B,MAAMsB,GAAW,GACXC,GAAS,GACTC,GAAU,GCCjBC,GAAQ,SAaRC,GAAcC,GAAQA,EAAIC,QAAQ,eAAgB,IAAIC,MAAM,KAM5DC,GAAgBC,GAAWA,EAAOH,QAAQ,eAAgB,IAO1DI,GAAY,CAACC,EAAO1E,KAmBf,CAAE0E,MAAAA,EAAOC,MAlBFD,EAAME,QACd,EACAT,GAAWO,EAAMG,MAAMC,QAAO,CAACH,EAAOI,KAClCJ,GA7BS,EA+BO,KAAZI,EACAJ,GA5BE,EA6BKT,GAAMc,KAAKD,GAClBJ,GAhCK,EAiCiB,MAAfI,EAAQ,GACfJ,GAASM,EAETN,GArCI,EAwCDA,IACR,GAEc3E,MAAAA,IAoCrBkF,GAAO,CAACC,EAAQf,KAClB,IAAIgB,EACAC,EAEJ,MAAOC,GAAelB,EAAIE,MAAM,KAC1BiB,EAAcpB,GAAWmB,GACzBE,EAA+B,KAAnBD,EAAY,GACxBE,EAnCS,CAACN,GAChBA,EACKzD,IAAI+C,IACJiB,MAAK,CAACvP,EAAGC,IACND,EAAEwO,MAAQvO,EAAEuO,MAAQ,EAAIxO,EAAEwO,MAAQvO,EAAEuO,OAAS,EAAIxO,EAAE6J,MAAQ5J,EAAE4J,QA+BtD2F,CAAWR,GAE1B,IAAK,IAAInN,EAAI,EAAGmL,EAAIsC,EAAO1N,OAAQC,EAAImL,EAAGnL,IAAK,CAC3C,MAAM0M,EAAQe,EAAOzN,GAAG0M,MACxB,IAAIkB,GAAS,EAEb,GAAIlB,EAAME,QAAS,CACfS,EAAW,CACPX,MAAAA,EACAmB,OAAQ,GACRzB,IAAAA,GAEJ,SAGJ,MAAM0B,EAAgB3B,GAAWO,EAAMG,MACjCgB,EAAS,GACT/N,EAAMD,KAAKC,IAAIyN,EAAYxN,OAAQ+N,EAAc/N,QACvD,IAAIiI,EAAQ,EAEZ,KAAOA,EAAQlI,EAAKkI,IAAS,CACzB,MAAM+F,EAAeD,EAAc9F,GAC7BgG,EAAaT,EAAYvF,GAE/B,GAAI+F,GAAoC,MAApBA,EAAa,GAAY,CAOzCF,EAFqB,MAAjBE,EAAuB,IAAMA,EAAazO,MAAM,IAEhCiO,EACfjO,MAAM0I,GACN0B,IAAIuE,oBACJC,KAAK,KACV,MAGJ,QAA0B,IAAfF,EAA4B,CAInCJ,GAAS,EACT,MAGJ,MAAMO,EAAejC,GAAMkC,KAAKL,GAEhC,GAAII,IAAiBX,EAAW,CAC5B,MAAM1K,EAAQmL,mBAAmBD,GACjCH,EAAOM,EAAa,IAAMrL,OACvB,GAAIiL,IAAiBC,EAAY,CAIpCJ,GAAS,EACT,OAIR,IAAKA,EAAQ,CACTR,EAAQ,CACJV,MAAAA,EACAmB,OAAAA,EACAzB,IAAK,IAAMmB,EAAYjO,MAAM,EAAG0I,GAAOkG,KAAK,MAEhD,OAIR,OAAOd,GAASC,GAAY,MAQ1BgB,GAAW,CAACC,EAAUC,IAAUD,GAAYC,EAAQ,IAAIA,IAAU,IAoElEC,GAAe,CAACC,EAAU5B,IAC5B,GAAGN,GACU,MAATM,EACM4B,EACA,GAAGlC,GAAakC,MAAalC,GAAaM,SAqBlD6B,GAAY,IACI,oBAAXC,QACP,aAAcA,QACd,aAAcA,6CC5NEzP,6GALFA,MAEVA,KACAA,+FALRmC,+CAGcnC,wJADIA,WAEVA,WACAA,2MAxCO0P,EAAK,gBACLvC,GAAU,YACVwC,kBACAC,sBAELC,EAAWrJ,EAAWqG,qCACpBiD,GAAStJ,EAAWsG,yCACpBiD,GAAavJ,EAAWuG,IAC1BiD,EAAWnK,QAEboK,EAAMC,EAAoBC,EAAW3O,mPACtCyO,EAAc,MAAPP,EAAaU,EAAMlD,IDwLjB,EAACwC,EAAII,KAEjB,GAAIJ,EAAGW,WAAW,KAAM,OAAOX,EAE/B,MAAOY,EAAYC,GAAWb,EAAGtC,MAAM,MAChCoD,GAAgBV,EAAK1C,MAAM,KAC5BqD,EAAaxD,GAAWqD,GACxBI,EAAezD,GAAWuD,GAGhC,GAAsB,KAAlBC,EAAW,GAAW,OAAOtB,GAASqB,EAAcD,GAIxD,IAAKE,EAAW,GAAGJ,WAAW,KAAM,CAChC,MAAMjB,EAAWsB,EAAaC,OAAOF,GAAYzB,KAAK,KACtD,OAAOG,IAA2B,MAAjBqB,EAAuB,GAAK,KAAOpB,EAAUmB,GAQlE,MAAMK,EAAcF,EAAaC,OAAOF,GAClCI,EAAW,GAOjB,OALAD,EAAY/R,SAASgP,IACD,OAAZA,EAAkBgD,EAAStJ,MACV,MAAZsG,GAAiBgD,EAAShR,KAAKgO,MAGrCsB,GAAS,IAAM0B,EAAS7B,KAAK,KAAMuB,ICxNPvJ,CAAQ0I,EAAIU,EAAMlD,4BAClDgD,EAAqBY,EAAU1B,SAASiB,WAAWJ,0BACnDE,EAAYF,IAASa,EAAU1B,+BAC/B2B,EAAcZ,EAAY,YAAS3P,OACnCgB,EAAQoO,GACPC,SAAUiB,EACVb,KAAAA,EACAC,mBAAAA,EACAC,UAAAA,EACAa,cAAeC,iBAGF5N,OACb2M,EAAS,QAAS3M,GD4NH,CAACA,IACnBA,EAAM6N,kBACU,IAAjB7N,EAAM8N,UACJ9N,EAAM+N,SAAW/N,EAAMgO,QAAUhO,EAAMiO,SAAWjO,EAAMkO,UC9NlDC,CAAenO,IACfA,EAAMoO,uBAGAC,EAAgBZ,EAAU1B,WAAaa,GAAQ9C,EACrD4C,EAASE,GAAQN,MAAAA,EAAOxC,QAASuE,2KCgBvB1R,8EATbA,kqBACOA,iJAAAA,gBJ60ChB,SAAmC4I,EAAM5I,EAAKM,GAC1C,MAAM0I,EAAYhJ,EAAII,SAChB2I,SAAEA,GAAaH,EACjBA,EAAKK,UAAYL,EAAKU,OACtBN,EAAUJ,EAAKhF,OAASmF,GAExBH,EAAKK,UAAYL,EAAKY,QACtBR,EAAUJ,EAAKW,OAASR,GAE5BH,EAAKR,MAAM/G,EAAE2H,EAAW1I,0NIn1CRN,KACAA,YAFEA,OAAmB0N,SAAW1N,oNAChCA,cACAA,qBAFEA,OAAmB0N,SAAW1N,uVAJ/CA,MAAgBA,KAAawN,QAAUxN,kFAAvCA,MAAgBA,KAAawN,QAAUxN,4OApC7B2N,EAAO,iBACPlO,EAAY,QAEnBkS,KACAC,yBAEIC,EAAaC,gBAAEA,EAAeC,YAAEA,GAAgBvL,EAAWsG,+BAE7DU,GACFG,KAAAA,EAGAD,QAAkB,KAATC,GJ65BjB,IAAmBpP,SI54BfsT,EAAcrE,GJ44BCjP,OIz4BXuT,EAAgBtE,IJ04BpB7H,IAAwBhG,GAAGC,WAAWC,KAAKtB,0JI35BpCyT,GAAgBA,EAAaxE,QAAUA,OAC1CmE,EAAcK,EAAarD,cAEnBlP,UAAWwI,EAAC0F,KAAEA,KAAS/L,GAAS8K,MACxCkF,EAAahQ,GAETqG,IACIA,EAAEgK,WAAW5B,WAAW,cAAW5Q,EAAYwI,OAC9CxI,EAAYwI,MAGrBuH,MAAeC,QAAQyC,SAAS,EAAG,oHC5B3C,MAAMC,GAAmB,GAgBzB,SAASC,GAASxO,EAAOyO,EAAQpU,GAC7B,IAAIqU,EACJ,MAAMC,EAAc,IAAI1Q,IACxB,SAAS2C,EAAIgO,GACT,GAAIxT,EAAe4E,EAAO4O,KACtB5O,EAAQ4O,EACJF,GAAM,CACN,MAAMG,GAAaN,GAAiBtR,OACpC,IAAK,MAAM6R,KAAcH,EACrBG,EAAW,KACXP,GAAiBtS,KAAK6S,EAAY9O,GAEtC,GAAI6O,EAAW,CACX,IAAK,IAAI3R,EAAI,EAAGA,EAAIqR,GAAiBtR,OAAQC,GAAK,EAC9CqR,GAAiBrR,GAAG,GAAGqR,GAAiBrR,EAAI,IAEhDqR,GAAiBtR,OAAS,IAuB1C,MAAO,CAAE2D,IAAAA,EAAK8C,OAlBd,SAAgB/I,GACZiG,EAAIjG,EAAGqF,KAiBWzE,UAftB,SAAmBb,EAAKqU,EAAa1U,GACjC,MAAMyU,EAAa,CAACpU,EAAKqU,GAMzB,OALAJ,EAAY/K,IAAIkL,GACS,IAArBH,EAAYK,OACZN,EAAOD,EAAM7N,IAAQvG,GAEzBK,EAAIsF,GACG,KACH2O,EAAYjK,OAAOoK,GACM,IAArBH,EAAYK,OACZN,IACAA,EAAO,SAMvB,SAASO,GAAQC,EAAQvU,EAAIwU,GACzB,MAAMC,GAAUnH,MAAMoH,QAAQH,GACxBI,EAAeF,EACf,CAACF,GACDA,EACAK,EAAO5U,EAAGsC,OAAS,EACzB,MAxDO,CACH1B,UAAWiT,GAuDCW,GAAgBvO,IAC5B,IAAI4O,GAAS,EACb,MAAMC,EAAS,GACf,IAAI3J,EAAU,EACV4J,EAAUrV,EACd,MAAMsV,EAAO,KACT,GAAI7J,EACA,OAEJ4J,IACA,MAAM7R,EAASlD,EAAGyU,EAASK,EAAO,GAAKA,EAAQ7O,GAC3C2O,EACA3O,EAAI/C,GAGJ6R,EAAUxU,EAAY2C,GAAUA,EAASxD,GAG3CuV,EAAgBN,EAAa1I,KAAI,CAACpL,EAAO0B,IAAM3B,EAAUC,GAAQwE,IACnEyP,EAAOvS,GAAK8C,EACZ8F,KAAa,GAAK5I,GACdsS,GACAG,OAEL,KACC7J,GAAY,GAAK5I,OAIrB,OAFAsS,GAAS,EACTG,IACO,WACH5U,EAAQ6U,GACRF,QAtF8BnU,WCL1C,MAAMsU,GAAeC,IACV,IACAA,EAAO7D,SACVF,MAAO+D,EAAOC,QAAQhE,MACtBtL,IAAMqP,EAAOC,QAAQhE,OAAS+D,EAAOC,QAAQhE,MAAMtL,KAAQ,YAoF7DuP,GAjFgB,CAACF,IACnB,MAAMG,EAAY,GAClB,IAAIhE,EAAW4D,GAAYC,GAE3B,MAAO,CACH7D,eACI,OAAOA,GAGXzM,OAAO0Q,GACHD,EAAUhU,KAAKiU,GAEf,MAAMC,EAAmB,KACrBlE,EAAW4D,GAAYC,GACvBI,EAAS,CAAEjE,SAAAA,EAAUmE,OAAQ,SAKjC,OAFAN,EAAOlQ,iBAAiB,WAAYuQ,GAE7B,KACHL,EAAOjQ,oBAAoB,WAAYsQ,GACvC,MAAMjL,EAAQ+K,EAAUtH,QAAQuH,GAChCD,EAAUrH,OAAO1D,EAAO,KAIhCiH,SAASL,GAAIC,MAAEA,EAAKxC,QAAEA,GAAU,GAAU,IACtCwC,EAAQ,IAAKA,EAAOtL,IAAK4P,KAAKC,MAAQ,IAEtC,IACQ/G,EAASuG,EAAOC,QAAQQ,aAAaxE,EAAO,GAAID,GAC/CgE,EAAOC,QAAQS,UAAUzE,EAAO,GAAID,GAC3C,MAAOzJ,GACLyN,EAAO7D,SAAS1C,EAAU,UAAY,UAAUuC,GAEpDG,EAAW4D,GAAYC,GACvBG,EAAUhV,SAASiV,GACfA,EAAS,CAAEjE,SAAAA,EAAUmE,OAAQ,WAEjCrR,SAAS0R,cAAcC,UA0CbC,CAClB/E,KAAcC,OAtCS,EAAC+E,EAAkB,OAC1C,IAAI1L,EAAQ,EACZ,MAAM2L,EAAQ,CAAC,CAAErF,SAAUoF,EAAiBE,OAAQ,KAC9CC,EAAS,GAEf,MAAO,CACH9E,eACI,OAAO4E,EAAM3L,IAEjBtF,iBAAiBd,EAAMnE,KACvBkF,oBAAoBf,EAAMnE,KAC1BoV,QAAS,CACLiB,cACI,OAAOH,GAEX3L,YACI,OAAOA,GAEX6G,YACI,OAAOgF,EAAO7L,IAElBsL,UAAUzE,EAAOkF,EAAG3H,GAChB,MAAOkC,EAAUsF,EAAS,IAAMxH,EAAIE,MAAM,KAC1CtE,IACA2L,EAAM5U,KAAK,CAAEuP,SAAAA,EAAUsF,OAAAA,IACvBC,EAAO9U,KAAK8P,IAEhBwE,aAAaxE,EAAOkF,EAAG3H,GACnB,MAAOkC,EAAUsF,EAAS,IAAMxH,EAAIE,MAAM,KAC1CqH,EAAM3L,GAAS,CAAEsG,SAAAA,EAAUsF,OAAAA,GAC3BC,EAAO7L,GAAS6G,MAQLmF,mDCuBd9U,MAAgBA,KAAakN,aAAelN,+TA/G1CuP,EAAW,YACXwF,EAAM,iBACNpB,EAAUC,MAErBtN,EAAWyG,GAAS4G,SAEdqB,EAAkBxO,EAAWqG,IAC7BoI,EAAgBzO,EAAWsG,IAE3BmB,EAASmE,kCACTL,EAAcK,GAAS,+BACzB8C,GAAiB,QAIfrF,EACFmF,GAAmB5C,GAAS2C,GAAQ3F,SAAU2F,GAAQpB,EAAQ9D,qCAM5DC,EAAOmF,EACPA,EAAcE,WACd/C,IACIzE,KAAM4B,EACNrC,IAAKqC,gCAGT4F,EAAatC,IAAS/C,EAAMiC,MAAgBjC,EAAMiC,UAE/CA,SAAoBjC,QAEjBnC,KAAM4B,GAAaO,SACnBtC,EAAKN,IAAEA,GAAQ6E,SAIdpE,KADIH,EAAME,QAAU6B,EAAW/B,EAAMG,KAAKR,QAAQ,QAAS,IACrDD,IAAAA,MP23BvB,IAAiB3O,SOz0BRyW,IPy0BQzW,MOr0BYoV,EAAQvQ,QAAQC,IAC7BwM,EAASrL,IAAInB,EAAMwM,aPq0B/BlK,IAAwBhG,GAAG2K,SAASzK,KAAKtB,GO/zBrC+H,EAAWuG,GAAUgD,IAGzBvJ,EAAWwG,IACPiF,YAAAA,EACAjC,KAAAA,EACAqF,WAAAA,EACAtD,cAjEmBrE,UACXG,KAAM4B,GAAaa,WACrBzC,GAASH,KAKfA,EAAM4H,MAAQzH,EACdH,EAAMG,KAAO2B,GAAaC,EAAU5B,GAEd,oBAAX8B,WAIHyF,eAEEG,EAAgBrH,IAAMR,GAAQsD,EAAU1B,UAE1CiG,IACAtD,EAAYvN,IAAI6Q,GAChBH,GAAiB,QAGrBjH,EAAO3G,QAAQgO,OAAWA,EAAI9H,MA2ClCsE,gBAvCqBtE,IACrBS,EAAO3G,QAAQgO,GAAOA,EAAG7K,QAAQzC,GAAMA,IAAMwF,4LAKrCG,KAAM4B,GAAaa,EAC3BnC,EAAO3G,QAAQgO,GACXA,EAAG9K,KAAKxC,GAAMvJ,OAAOP,OAAO8J,GAAK2F,KAAM2B,GAAaC,EAAUvH,EAAEoN,sCAQ9DG,EAAYvH,GAAKwH,EAAS1E,EAAU1B,UAC1C2C,EAAYvN,IAAI+Q,6HC1FjB,MAAME,GAAWrD,GAAS,UACpBsD,GAActD,GAAS,GAGvBuD,GAAiBvD,GAAS,SAC1BwD,GAAyBxD,GAAS,IAAI6B,MACtC4B,GAAsBzD,GAAS,WAC/B0D,GAAiB1D,GAAS,SAC1B2D,GAAe3D,GAAS,SACxB4D,GAAS5D,GAAS,SAElB6D,GAAY7D,GAAS,IACrB8D,GAAO9D,GAAS,IAChB+D,GAAS/D,GAAS,IAClBgE,GAAchE,GAAS,IACvBiE,GAAWjE,GAAS,GAEpBkE,GAAYlE,GAAS,IACrBmE,GAAWnE,GAAS,IACpBoE,GAAcpE,GAAS,IAAI6B,MAC3BwC,GAAQrE,GAAS,IACjBsE,GAActE,GAAS,IAGvBuE,GAAiCvE,GAAS,IAAI6B,MAC9C2C,GAA8BxE,GAAS,SACvCyE,GAAyBzE,GAAS,GAClC0E,GAAiB1E,GAAS,SAC1B2E,GAA4B3E,GAAS,WACrC4E,GAA4B5E,GAAS,SAErC6E,GAAoB7E,GAAS,IAC7B8E,GAAe9E,GAAS,IACxB+E,GAAiB/E,GAAS,IAC1BgF,GAAsBhF,GAAS,IAE/BiF,GAAoBjF,GAAS,IAC7BkF,GAAmBlF,GAAS,IAC5BmF,GAAsBnF,GAAS,IAAI6B,MACnCuD,GAAgBpF,GAAS,IACzBqF,GAAmBrF,GAAS,yqECxBbpS,qrCAYAA,4eAcAA,gfAOAA,4gBAOAA,oYAjD5BmC,SACEJ,OACEA,cAIAA,OACEA,OACEA,cACAA,OACEA,OACAA,OACAA,WAHkB/B,aAMtB+B,OACEA,cACAA,WAA+B/B,aAEjC+B,OACEA,cACAA,OACEA,OACAA,OACAA,OACAA,OACAA,OACAA,OACAA,OACAA,OACAA,WATkB/B,aAYtB+B,OACEA,cACAA,OACEA,OACAA,WAFkB/B,aAKtB+B,OACEA,eACAA,QACEA,SACAA,cAFkB/B,cAKtB+B,QACEA,kBACAA,SACEA,SACAA,SACAA,cAHkB/B,cAMtB+B,sLA9CsB/B,eAQWA,eAIXA,eAcAA,iBAOAA,iBAOAA,qNAvDpB0X,EAAWC,IACXjC,GAAYpO,QAAQ0C,GAAM2N,qCAcNC,gCAQWC,mCAIXC,gCAcAC,gCAOAC,gCAOAC,yBAMEP,EAAQ,s3FC9BV1X,iYAzB5BmC,SACEJ,OACEA,cAIAA,OACEA,OACEA,cACAA,WAA+B/B,aAEjC+B,OACEA,cACAA,WAA+B/B,aAEjC+B,OACEA,cACAA,WAA+B/B,aAEjC+B,OACEA,cACAA,WAA+B/B,aAEjC+B,OACEA,cACAA,OACEA,OACAA,OACAA,WAHkB/B,aAMtB+B,6JAtBiC/B,UAAAA,qBAIAA,UAAAA,qBAIAA,UAAAA,qBAIAA,UAAAA,gBAIXA,2LA/BpB0X,EAAWC,IACXjC,GAAYpO,QAAQ0C,GAAM2N,mCAcKO,mCAIAC,mCAIAC,mCAIAC,mCAIXC,yBAMEZ,EAAQ,0iGC/BtCvV,SACEJ,OACEA,cAIAA,OACEA,OACEA,cACAA,WAA+B/B,aAEjC+B,OACEA,cACAA,WAA+B/B,aAEjC+B,OACEA,cACAA,WAA+B/B,aAEjC+B,OACEA,cACAA,WAAgC/B,aAElC+B,OACEA,cACAA,WAA+B/B,aAEjC+B,4JAlBiC/B,UAAAA,qBAIAA,UAAAA,eAIAA,qBAICA,UAAAA,sBAIDA,UAAAA,2LA/B/B0X,EAAWC,IACXjC,GAAYpO,QAAQ0C,GAAM2N,mCAcKY,mCAIAC,mCAIAC,mCAICC,mCAIDC,4BAETjB,EAAQ,gdCTvB,0BAAmB1X,mCAGnB,oCAA6BA,mCAG7B,gCAAyBA,mCAGzB,2BAAoBA,mCAGpB,uBAAgBA,mCAGhB,iBAAUA,uGAQV,oBAAYA,uCAGZ,gBAAQA,uCAGR,kBAAUA,uCAGV,wBAAgBA,uCAGhB,qBAAaA,iHAQb,sBAAcA,wCAGd,qBAAaA,wCAGb,yBAAiBA,wCAGjB,iBAASA,wCAGT,wBAAgBA,y7BA7D7BmC,SACEJ,OACEA,OACEA,cACAA,OACEA,OACEA,4BAEFA,OACEA,4BAEFA,OACEA,4BAEFA,OACEA,4BAEFA,OACEA,4BAEFA,OACEA,4BAINA,OACEA,cACAA,OACEA,OACEA,8BAEFA,QACEA,mCAEFA,QACEA,mCAEFA,QACEA,mCAEFA,QACEA,mCAINA,QACEA,kBACAA,SACEA,SACEA,oCAEFA,SACEA,oCAEFA,SACEA,oCAEFA,SACEA,oCAEFA,SACEA,mCAKRA,QACEA,8BAAkB6W,8BA7DU5Y,eAGUA,eAGJA,eAGLA,gBAGJA,gBAGNA,iBAQEA,kBAGJA,kBAGEA,kBAGMA,mBAGHA,oBAQCA,oBAGDA,oBAGIA,qBAGRA,qBAGOA,mDA7ElB4Y,SAGHC,EAAOlW,SAASmW,eAAe,qBAEjCD,OACIxV,MAAY0V,MAAM,UAAY/S,SAAS,EAAMgT,YAAY,IAC7DH,EAAKI,cAAc5V,GACnB6V,QAAQC,IAAI,iCAEZD,QAAQ3P,MAAM,ubAZD1D,40ECoBO7F,w7BAWAA,8gBASAA,uhBAOAA,mYAxC5BmC,SACEJ,OACEA,cAIAA,OACEA,OACEA,cACAA,WAA+B/B,aAEjC+B,OACEA,cACAA,OACEA,OACAA,WAFkB/B,aAKtB+B,OACEA,cACAA,WAAiC/B,aAEnC+B,OACEA,cACAA,OACEA,OACAA,OACAA,WAHkB/B,aAOtB+B,OACEA,cACAA,OACEA,OACAA,WAFkB/B,aAKtB+B,OACEA,cACAA,QACEA,SACAA,cAFkB/B,cAMtB+B,oLArCiC/B,eAIXA,wBAOaA,UAAAA,eAIbA,gBASAA,iBAOAA,qNA9CpB0X,EAAWC,IACXjC,GAAYpO,QAAQ0C,GAAM2N,qCAcKyB,mCAIXC,gCAOaC,sCAIbC,gCASAC,gCAOAC,yBAME/B,EAAQ,kqFC/CtCvV,SACEJ,OACEA,cAIAA,OACEA,OACEA,cACAA,WAA+B/B,aAEjC+B,OACEA,cACAA,WAA+B/B,aAEjC+B,OACEA,cACAA,WAA+B/B,aAEjC+B,OACEA,cACAA,WAA+B/B,aAEjC+B,wIAdiC/B,UAAAA,qBAIAA,UAAAA,qBAIAA,UAAAA,qBAIAA,UAAAA,mKA3B/B0X,EAAWC,IACXjC,GAAYpO,QAAQ0C,GAAM2N,iCAcK+B,mCAIAC,mCAIAC,mCAIAC,4BAETnC,EAAQ,igGCEV1X,iYAzB5BmC,SACEJ,OACEA,cAIAA,OACEA,OACEA,cACAA,WAA+B/B,aAEjC+B,OACEA,cACAA,WAA+B/B,aAEjC+B,OACEA,cACAA,WAA+B/B,aAEjC+B,OACEA,cACAA,WAAgC/B,aAElC+B,OACEA,cACAA,OACEA,OACAA,OACAA,WAHkB/B,aAMtB+B,6JAtBiC/B,UAAAA,qBAIAA,UAAAA,eAIAA,qBAICA,UAAAA,gBAIZA,2LA/BpB0X,EAAWC,IACXjC,GAAYpO,QAAQ0C,GAAM2N,mCAcKmC,mCAIAC,mCAIAC,mCAICC,mCAIZC,yBAMExC,EAAQ,mcCvBvB,oCAA6B1X,mCAG7B,gCAAyBA,mCAGzB,2BAAoBA,mCAGpB,iBAAUA,mCAGV,6BAAsBA,mCAGtB,6BAAsBA,yGAStB,oBAAYA,uCAGZ,gBAAQA,uCAGR,kBAAUA,uCAGV,wBAAgBA,kHAQhB,sBAAcA,wCAGd,qBAAaA,wCAGb,yBAAiBA,wCAGjB,iBAASA,wCAGT,qBAAaA,y7BA3D1BmC,SACEJ,OACEA,OACEA,cACAA,OACEA,OACEA,4BAEFA,OACEA,4BAEFA,OACEA,4BAEFA,OACEA,4BAEFA,OACEA,4BAEFA,OACEA,4BAKNA,OACEA,cACAA,OACEA,OACEA,8BAEFA,QACEA,mCAEFA,QACEA,mCAEFA,QACEA,mCAINA,QACEA,kBACAA,SACEA,SACEA,oCAEFA,SACEA,oCAEFA,SACEA,oCAEFA,SACEA,oCAEFA,SACEA,mCAKRA,QACEA,8BAAkB/B,iCA3DoBA,eAGJA,eAGLA,eAGVA,gBAGYA,gBAGAA,iBASVA,kBAGJA,kBAGEA,kBAGMA,mBAQFA,oBAGDA,oBAGIA,oBAGRA,qBAGIA,obAnElBgQ,EAAWnK,oDAGfmK,EAAS,g9CCMyDhQ,iJAEqBA,mIAEXA,oHAEVA,8GAEJA,4FAEZA,qGAEMA,sFAEVA,4FAEIA,2GAEUA,kGAENA,0GAEEA,wGAEFA,iHAEMA,mGAEZA,iHAEYA,gIAhClEmC,SACIJ,cACAA,cACAA,cACAA,cACAA,cACAA,cACAA,cACAA,cACAA,cACAA,cACAA,cACAA,cACAA,cACAA,cACAA,cACAA,cACAA,cACAA,cACAA,cACAA,cACAA,cACAA,cACAA,eACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBAEAA,iCAhCoE/B,eAAAA,oBAEqBA,qBAEXA,eAAAA,qBAEVA,eAAAA,sBAEJA,eAAAA,sBAEZA,eAAAA,sBAEMA,eAAAA,uBAEVA,eAAAA,uBAEIA,eAAAA,uBAEUA,eAAAA,wBAENA,gBAAAA,0BAEEA,iBAAAA,0BAEFA,iBAAAA,yBAEMA,2BAEZA,iBAAAA,2BAEYA,iBAAAA,06EC9B2BA,ggBAOnBA,wvCAkBZA,sFAEVA,4FAEIA,gHAEUA,0GAEJA,wGAEFA,iHAEMA,gGAGXA,+hBA1CvDmC,SACIJ,cACAA,cACAA,cACAA,OACIA,OACAA,WAFW/B,aAIf+B,cACAA,cACAA,cACAA,OACIA,OACAA,OACAA,WAHW/B,aAKf+B,cACAA,OACIA,OACAA,WAFW/B,aAIf+B,cACAA,OACIA,OACAA,WAFW/B,aAIf+B,cACAA,cACAA,cACAA,cACAA,cACAA,eACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBAEAA,gBACAA,gBAEAA,gBACAA,QACIA,SACAA,SACAA,cAHW/B,eAKf+B,gCAhDyF/B,eAE1EA,oBAKuDA,eAEvDA,gBAMAA,gBAKAA,sBAK2CA,eAAAA,uBAEVA,eAAAA,uBAEIA,eAAAA,wBAEUA,gBAAAA,yBAEJA,iBAAAA,0BAEFA,iBAAAA,yBAEMA,0BAGXA,iBAAAA,qBAGpCA,ohGCrC0EA,2iCA8B/BA,2FAEVA,iGAEIA,gHAEUA,wRAQJA,wGAEFA,iHAEMA,+FAEZA,iHAEYA,6JA5DlEmC,SACIJ,cACAA,OACIA,OACAA,OACAA,WAHW/B,aAKf+B,cACAA,cACAA,cACAA,OACIA,OACAA,OACAA,OACAA,OACAA,OACAA,OACAA,OACAA,OACAA,WATW/B,aAWf+B,cACAA,OACIA,OACAA,WAFW/B,aAIf+B,cACAA,OACIA,OACAA,WAFW/B,aAIf+B,cACAA,OACIA,OACAA,OACAA,WAHW/B,aAKf+B,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,QACIA,SACAA,SACAA,cAHW/B,eAKf+B,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBAEAA,2BA5De/B,oBAM0EA,eAE1EA,eAYAA,gBAKAA,gBAKAA,uBAM2CA,gBAAAA,wBAEVA,gBAAAA,wBAEIA,gBAAAA,wBAEUA,gBAAAA,mBAE/CA,0BAM2CA,iBAAAA,0BAEFA,iBAAAA,yBAEMA,2BAEZA,iBAAAA,2BAEYA,iBAAAA,2vBC1DZA,iKAFtDmC,SACIJ,cACAA,cACAA,gCADkD/B,eAAAA,gOCoX9B,UAAbA,uXANW,UAAbA,oWANa,UAAbA,oWANa,UAAbA,4VAqB6B4Y,uMAFRA,80CApBR,GAAf5Y,OAMoB,GAAfA,OAMe,GAAfA,OAMe,GAAfA,uiBAvCA,oDAKA,kEAMA,kEAMA,kZA/BgBA,6dAW+B,GAAhBA,KAAoBma,GAASC,gbAKb,GAAhBpa,KAAoBma,GAASC,keAKb,GAAhBpa,KAAoBma,GAASC,weAMb,GAAhBpa,KAAoBma,GAASC,wVAjCxEjY,SACAJ,OACEA,OACEA,OACEA,cACAA,OACEA,OACEA,OACAA,WAFkB/B,aAIpB+B,cAOJA,OACEA,OACEA,qBAGJA,OACEA,OACEA,qBAGJA,OACEA,OACEA,OACAA,qBAGJA,OACEA,OACEA,OACAA,wQA9BoB/B,yBAW+B,GAAhBA,KAAoBma,GAASC,oOAKb,GAAhBpa,KAAoBma,GAASC,oOAKb,GAAhBpa,KAAoBma,GAASC,oOAMb,GAAhBpa,KAAoBma,GAASC,oqBAtClED,GAAS,oDACTC,GAAY,+CAvGPxB,mCA+ELyB,qEArRJ1X,SAASa,iBAAiB,kCAYf8W,UACDC,EAAQ5X,SAASmW,eAAe,SAASlV,MAC/CsV,QAAQC,IAAI,eAAgBoB,GAC1B9K,OAAiB,SAAE+K,SAAUC,OAAQF,IACrC9K,OAAiB,SAAEiL,YACfhY,KAAM,kCACNiY,aAAe,6EACfC,QAAS,QAEhBC,YACFC,UAAc,GACdC,SAAa,SACbC,SAAa,YAId9B,QAAQC,IAAI1J,OAAiB,UAC7ByJ,QAAQC,IAAI,gBA5BVD,QAAQC,IAAI,YAgCZ8B,mBACKC,eAAe,mBACf5R,MAAMuP,IACLK,QAAQC,IAAI,aACZD,QAAQC,IAAIN,SAIJsC,IAEJC,cAAe,OACfC,mBAAoB,aAGpBD,cAAe,YACfC,mBAAoB,aAGpBD,cAAe,QACfC,mBAAoB,kBAIxBnC,QAAQC,IAAIgC,GAEZ1L,OAAOjM,iBACL,UACCyC,IACCA,EAAEwL,uBAGI6J,EAAiBL,mBAAmBM,cACxC1C,EACAsC,GAEFjC,QAAQC,IAAIqC,KAAKC,UAAUH,UACrBI,EAAUJ,EAAeK,eAAeC,QAC9C1C,QAAQC,IAAIuC,GAiB0C,KAAlD/Y,SAASmW,eAAe,SAASlV,MAAMiY,QACzCC,MAVE,sJAWAC,OAAQ,OACRC,SACE,eAAgB,kCAElBC,KAAMP,EAAQ1Y,KACdkZ,WAAW,IAEZ5S,WAAa4P,QAAQC,IAAI,0BAC1BmB,IASFpB,QAAQC,IAAI,iCAPVD,QAAQC,IAAI,WAShB,GAKFN,EAAKrV,iBACH,UACCyC,IACCA,EAAEwL,uBAGI6J,EAAiBL,mBAAmBM,cACxC1C,EACAsC,GAEFjC,QAAQC,IAAIqC,KAAKC,UAAUH,UACrBI,EAAUJ,EAAeK,eAAeC,QAC9C1C,QAAQC,IAAIuC,GAiB0C,KAAlD/Y,SAASmW,eAAe,SAASlV,MAAMiY,QACzCC,MAVE,sJAWAC,OAAQ,OACRC,SACE,eAAgB,kCAElBC,KAAMP,EAAQ1Y,KACdkZ,WAAW,IAEZ5S,WAAa4P,QAAQC,IAAI,0BAC1BmB,IASFpB,QAAQC,IAAI,iCAPVD,QAAQC,IAAI,WAShB,MAQRD,QAAQC,IAAI,2BAEdD,QAAQC,IAAI,WA0GZzD,GAAYvW,WAAWyE,QACrByW,EAAczW,UAGZuY,GAAgB,EAEhBzE,EAAWC,IACbuB,QAAQC,IAAIxB,GACVjC,GAAYpO,QAAQ0C,GAAM2N,IAEN,GAAhByE,GAAsBD,IACxBjD,QAAQC,IAAI,qBACZgD,GAAgB,EAEhB1M,OAAOjM,iBAAiB,gBAAiBH,IACvCA,EAAMoO,iBAnHTwI,GACDf,QAAQC,IAAI,kBACZD,QAAQC,IAAI,uCAEVD,QAAQC,IAAI,0DAgIQkD,yBAWL3E,EAAQ,OAKRA,EAAQ,OAKRA,EAAQ,OAMRA,EAAQ,ocC5V9BvV,+BAGCA,gkBATU4S,EAAM,8DCDN,yEAAQ,CAClB/S,OAAQW,SAASsZ,KACjBza,MAAO,CACLkB,KAAM"}